{"version":3,"sources":["model/Result.tsx","model/Filter.tsx","model/View.tsx","model/Tag.tsx","state.js","components/atoms/ExpandCollapse.tsx","components/organisms/HighlightOnHover.tsx","components/organisms/Expandable.tsx","components/atoms/Emoji.tsx","components/atoms/ResultImage.tsx","components/molecules/FullWidthWrappingFlexBox.tsx","components/atoms/Pre.tsx","components/molecules/OneClickCopy.tsx","components/explore/story/TestStepsRecursive.tsx","components/explore/story/OutcomeHeading.tsx","components/explore/story/OutcomeDescription.tsx","components/explore/story/Outcome.tsx","components/explore/story/Narrative.tsx","components/molecules/RowWithResultAggregate.tsx","components/explore/story/StoryHeading.tsx","components/atoms/HorizontalResultPercentageLine.tsx","components/molecules/Actors.tsx","components/explore/story/Story.tsx","components/explore/ByStory.tsx","model/TestStep.tsx","components/explore/screenshots/TestStepDescriptions.tsx","components/explore/screenshots/Controls.tsx","components/molecules/ScreenShot.tsx","components/explore/screenshots/Screenshots.tsx","components/explore/ByScreenshots.tsx","components/explore/stats/ResultPercentage.tsx","components/explore/stats/DurationsDistribution.tsx","components/explore/stats/DurationStatistics.tsx","components/explore/stats/StepDurations.tsx","components/explore/stats/UnsuccessfulOutcomes.tsx","components/explore/stats/UnsuccessfulTags.tsx","components/explore/stats/StepDurationsDistribution.tsx","components/explore/stats/Stats.tsx","components/explore/outcome/Screenshots.tsx","components/explore/outcome/ExpandableTestStep.tsx","components/explore/outcome/DisplayRestQuery.tsx","components/explore/outcome/StackTrace.tsx","components/explore/outcome/TestStepDetails.tsx","components/explore/outcome/TestStepRow.tsx","components/explore/outcome/TestStepsRecursive.tsx","components/atoms/Devider.tsx","components/explore/outcome/Outcome.tsx","MediaQuery.tsx","themes.js","components/explore/outcome/SelectOutcome.tsx","components/explore/ByOutcome.tsx","components/explore/ExpandCollapseAll.tsx","components/molecules/ClearButton.tsx","components/controls/ToggleSideMenu.tsx","components/controls/SwitchViewMode.tsx","components/atoms/CheckboxButton.tsx","components/controls/FilterResult.tsx","components/controls/FilterKeywords.tsx","components/controls/FilterTestOutcome.tsx","components/controls/QuickLinks.tsx","components/controls/FilterTags.tsx","components/controls/SideMenu.tsx","components/LocalStateFromQueryParameters.tsx","components/ExploreData.tsx","components/ApplyFilter.tsx","components/Header.tsx","components/atoms/HorizontalGlobalResultPercentageLine.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Result","Filter","results","keyword","focusOutcome","focusType","focusTag","View","STORY","OUTCOMES","STATS","SCREENSHOTS","joined","it","_","join","type","name","displayName","initialState","filter","filteredOutcomes","window","outcomes","tagsByType","groupBy","uniqBy","map","tags","flat","hasParsedQuery","hasAppliedFilter","view","expansionDepth","theme","showSideMenu","selectedOutcome","selectedStep","showReadme","useGlobalState","createGlobalState","ExpandCollapse","isExpanded","onClick","useTheme","buttonStyle","margin","minWidth","padding","height","lineHeight","paddingLeft","Button","style","undefined","variant","color","startIcon","palette","background","paper","HighlightOnHover","border","children","useState","hover","setHover","Box","display","flex","secondary","main","default","transition","onMouseEnter","onMouseLeave","onMouseDown","backgroundColor","Expandable","depths","whatsHidden","expandLayers","expanded","setExpanded","useEffect","cursor","flexWrap","justifyContent","maxWidth","e","preventDefault","stopPropagation","textAlign","Emoji","label","role","aria-label","toLowerCase","emoji","colorOf","result","toUpperCase","PENDING","SUCCESS","FAILURE","IGNORED","ERROR","COMPROMISED","SKIPPED","ResultImage","FullWidthWrappingFlexBox","className","Pre","mergedStyle","Object","assign","overflowX","OneClickCopy","text","copied","setCopied","timer","setTimeout","clearTimeout","onCopy","size","TestStepsRecursive","tellAll","depth","length","testStep","step","paddingTop","description","exception","key","number","errorType","message","stackTrace","declaringClass","methodName","fileName","lineNumber","stepVariant","expandableTestStep","Fragment","OutComeHeading","tell","title","OutcomeDescription","overflow","primary","colorFor","borderRadius","marginRight","scenarioOutline","Outcome","width","borderTopLeftRadius","borderBottomLeftRadius","borderLeft","testSteps","OutcomeHeading","Narrative","lines","split","i","includes","exampleLine","outcomeTitle","outcome","startsWith","dataTable","data","headers","header","j","rows","row","values","value","k","renderExample","fontFamily","RowWithResultAggregate","resultPairs","toPairs","countBy","spaceNeeded","count","StoryHeading","storyName","HorizontalResultPercentageLine","counts","bgcolor","Actors","can","Story","actors","marginBottom","narrative","startTime","ByStory","outcomesByStoryId","o","userStory","id","sortBy","keys","storyId","flatSteps","forEach","push","TestStepDescriptions","highlight","screenshots","Controls","setIndex","index","items","controlStyle","Math","max","Array","min","href","target","ScreenShot","rel","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","hasScreenshots","Screenshots","screenshotToTestStep","screenshot","sortedByStepNumber","ByScreenshots","itemsDisplayed","setItemsDisplayed","outcomesWithScreenshots","findScreenshots","steps","concat","sorted","slice","fontSize","fullWidth","ResultPercentage","toFixed","DurationsDistribution","divisions","maximumDuration","duration","bars","round","sort","reverse","maxBarItems","minHeight","bar","flexDirection","borderBottom","borderRight","borderTop","prettyMilliseconds","DurationStatistics","sortedDurations","a","b","percentiles","setPercentiles","percent","floor","percentile","Slider","defaultValue","aria-labelledby","marks","valueLabelDisplay","onChange","v","orientation","mean","StepDurations","longestRunningSteps","selected","setSelected","grouped","allMax","maxHeight","formatted","position","top","left","toString","replace","UnsuccessfulOutcomes","exceptionSteps","exceptionCount","overflowY","float","whiteSpace","UnsuccessfulTags","tagCount","uniqTags","StepDurationsDistribution","Stats","ScreenShots","screenshotWidth","ExpandableTestStep","expandOnDepths","DisplayRestQuery","JSON","stringify","StackTrace","TestStepDetails","restQuery","TestStepRow","testStepDetails","paddingBottom","Divider","screenshotCount","queryCount","wordBreak","path","testSource","moment","fromNow","toISOString","marginLeft","MediaQuery","smallerThan","headerBreak1","Themes","dark","createMuiTheme","light","custom","BreakPoints","SelectOutcome","isSelected","minimal","useMediaQuery","find","FormControl","Select","native","textTransform","ByOutcome","ExpandCollapseAll","setDepths","paddingRight","ClearButton","disabled","ToggleSideMenu","setShowSideMenu","setFilter","activeFilters","SwitchToViewButton","switchTo","selectedView","disableElevation","borderBottomRightRadius","TabularNavigation","SelectNavigation","SwitchViewMode","setView","setDepth","CheckboxButton","checked","FilterResult","filtered","uniq","resultCounts","filteredResultCounts","canBeCleared","newFilter","resultsLenght","indexOf","splice","toggle","FilterKeywords","localValue","setLocalValue","debouncedSync","useRef","debounce","newValue","current","cancel","placeholder","FilterTestOutcome","QuickLinks","FilterTags","types","typeCounts","tagCounts","filteredTags","filteredTypeCounts","filteredTagCounts","tag","SideMenu","paramConfigMap","outcomeId","StringParam","NumberParam","ArrayParam","encodedQuery","query","encodeQueryParams","LocalStateFromQueryParameters","init","setInit","setTheme","location","useLocation","decodeQueryParams","decodedQuery","qs","parse","search","parseNumbers","WithSideMenu","minimalMenu","ExploreData","props","themeKey","minimalSwitchView","encodedTheme","filterSwitchViewAndExpand","alignItems","filterAndSwitchView","displayView","Fab","bottom","right","ApplyFilter","setFilteredOutcomes","Title","Info","info","setInfo","ClickAwayListener","onClickAway","ToggleTheme","isDark","Sponsor","Stars","src","alt","Header","spanStyle","Readme","HorizontalGlobalResultPercentageLine","appliedFilter","boxShadow","appStyle","grey","App","parsedQuery","document","body","setProperty","InitWithQueryParameters","opacity","hash","charCodeAt","Boolean","hostname","match","MyThemeProvider","ThemeProvider","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.564ef671.chunk.js","sourcesContent":["enum Result {\n  SUCCESS = \"SUCCESS\",\n  FAILURE = \"FAILURE\",\n  IGNORED = \"IGNORED\",\n  PENDING = \"PENDING\",\n  ERROR = \"ERROR\",\n  COMPROMISED = \"COMPROMISED\",\n  SKIPPED = \"SKIPPED\"\n}\n\nexport const colorOf = (result: string) => {\n  if (!result) return \"#000000\";\n  switch (result.toUpperCase()) {\n    case Result.PENDING:\n      return \"#5b6973\";\n    case Result.SUCCESS:\n      return \"#5ada28\";\n    case Result.FAILURE:\n      return \"#d5d351\";\n    case Result.IGNORED:\n      return \"#a8a2bc\";\n    case Result.ERROR:\n      return \"#e7222a\";\n    case Result.COMPROMISED:\n      return \"#d645c4\";\n    case Result.SKIPPED:\n      return \"#688975\"\n  }\n  return \"#000000\";\n};\n\n\nexport default Result","class Filter {\n  results: Array<string> = [];\n  keyword = \"\";\n  focusOutcome = \"\";\n  focusType = \"\";\n  focusTag = \"\";\n}\n\nexport default Filter","const View = {\n  STORY: \"story\",\n  OUTCOMES: \"outcomes\",\n  STATS: \"stats\",\n  SCREENSHOTS: \"screenshots\"\n};\n\nexport default View","import _ from \"lodash\";\n\ninterface Tag {\n  name: string\n  type: string\n  displayName: string\n}\n\nexport const joined = (it: Tag) => _.join([it.type, it.name, it.displayName]);\n\n\n\nexport default Tag","import {createGlobalState} from \"react-hooks-global-state\";\nimport Filter from \"./model/Filter\";\nimport View from \"./model/View\";\nimport _ from \"lodash\";\nimport {joined} from \"./model/Tag\";\n\nconst initialState = {\n  filter: new Filter(),\n  filteredOutcomes: window.outcomes,\n  tagsByType: _.groupBy(_.uniqBy(window.outcomes.map(it => it.tags).flat(), (it) => joined(it)), it => it.type),\n  hasParsedQuery: false,\n  hasAppliedFilter: false,\n  view: View.STATS,\n  expansionDepth: 0,\n  theme: \"dark\",\n  showSideMenu: false,\n  selectedOutcome: \"\",\n  selectedStep: \"\",\n  showReadme: false\n};\nconst {useGlobalState} = createGlobalState(initialState);\n\nexport default useGlobalState\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport {Button, useTheme} from \"@material-ui/core\"\nimport React from \"react\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\n\n\ninterface MyProps {\n  isExpanded: boolean\n  onClick?: Function\n}\n\nconst ExpandCollapse = ({isExpanded, onClick}: MyProps) => {\n  const theme = useTheme();\n  const buttonStyle = {\n    margin: \"0.25em\",\n    minWidth: 0,\n    padding: 0, height: \"1.5rem\", lineHeight: 1, paddingLeft: \"0.7rem\"\n  };\n\n\n  return <>\n    {!isExpanded &&\n    <Button\n        style={buttonStyle}\n        onClick={(() => onClick !== undefined && onClick())}\n        variant=\"contained\"\n        color=\"secondary\"\n        startIcon={<ExpandMore style={{color: theme.palette.background.paper}}/>}\n    />\n    }\n    {isExpanded &&\n    <Button\n        style={buttonStyle}\n        onClick={(() => onClick !== undefined && onClick())}\n        variant=\"contained\"\n        color=\"secondary\"\n        startIcon={<ExpandLess style={{color: theme.palette.background.paper}}/>}\n    />\n    }\n  </>\n};\n\nexport default ExpandCollapse","import React, {FunctionComponent, useState} from \"react\";\nimport {Box, useTheme} from \"@material-ui/core\";\n\ninterface MyProps {\n  border?: boolean\n}\n\nconst HighlightOnHover: FunctionComponent<MyProps> = ({border, children}) => {\n  const theme = useTheme();\n\n  const [hover, setHover] = useState(false);\n\n  if (border) {\n    return <Box display={\"flex\"} flex={1} style={{\n      border: `0.2rem solid ${hover ? theme.palette.secondary.main + \"2A\" : theme.palette.background.default + \"60\"}`,\n      transition: \"border 300ms cubic-bezier(0, 1, 0, 1)\",\n    }} onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} onMouseDown={() => setHover(false)}>\n      {children}\n    </Box>\n  }\n\n  return <Box display={\"flex\"} flex={1} style={{\n    backgroundColor: `${hover ? theme.palette.secondary.main + \"2A\" : theme.palette.background.default + \"00\"}`,\n    transition: \"background-color 300ms cubic-bezier(0, 1, 0, 1)\"\n  }} onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} onMouseDown={() => setHover(false)}>\n    {children}\n  </Box>\n};\n\nexport default HighlightOnHover","import React, {FunctionComponent, useEffect, useState} from \"react\";\nimport useGlobalState from \"../../state\";\nimport {Box} from \"@material-ui/core\";\nimport ExpandCollapse from \"../atoms/ExpandCollapse\"\nimport HighlightOnHover from \"./HighlightOnHover\";\n\n\ninterface ExpandableProps {\n  // auto expand when <= global depths\n  depths?: number,\n  isExpanded?: boolean,\n  whatsHidden?: any;\n}\n\nconst Expandable: FunctionComponent<ExpandableProps> = ({depths, children, whatsHidden, isExpanded}) => {\n  const [expandLayers] = useGlobalState('expansionDepth');\n  const [expanded, setExpanded] = useState(depths ? expandLayers >= depths : isExpanded !== undefined && isExpanded);\n\n  useEffect(() => {\n    if (!depths) return;\n    setExpanded(expandLayers >= depths)\n  }, [depths, expandLayers]);\n\n  const myToggle = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setExpanded(!expanded);\n\n  };\n\n  if (!whatsHidden) {\n    return <>children</>\n  }\n\n  return <>\n    <Box style={{cursor: \"pointer\"}} display=\"flex\" flex={\"0 0 100%\"} flexWrap={\"wrap\"} justifyContent=\"space-between\"\n         maxWidth={\"100%\"} onClick={myToggle} lineHeight={2}>\n      <HighlightOnHover>\n        <Box display=\"flex\" flex={\"1 0 80%\"}>\n          {children}\n        </Box>\n        <Box flex={\"0 0 3rem\"} style={{textAlign: \"right\"}}>\n          <ExpandCollapse\n            isExpanded={expanded}\n          />\n        </Box>\n      </HighlightOnHover>\n    </Box>\n    {expanded && whatsHidden}\n  </>\n};\n\nexport default Expandable\n","import React, {FunctionComponent} from \"react\";\n\ninterface MyProps {\n  label: string\n}\n\nconst emoji = (label: string) => {\n  switch (label.toLowerCase()) {\n    case \"feature\":\n      return \"📘\";\n    case \"tag\":\n      return \"🏷️\";\n    case \"label\":\n      return \"🔖\";\n    case \"release\":\n      return \"📦\";\n    case \"version\":\n      return \"📦\";\n    case \"story\":\n      return \"📖\";\n    case \"big screen\":\n      return \"🖥️\";\n    case \"screenshots\":\n      return \"🖼️\";\n    case \"mobile\":\n      return \"📱\";\n    case \"one hundred\":\n      return \"💯\";\n    case \"stats\":\n      return \"📊\";\n    case \"outcome\":\n      return \"📑\";\n    case \"night\":\n      return \"🌙\";\n    case \"day\":\n      return \"☀️\";\n    case \"http\":\n      return \"📡↔️🛰️️\";\n    case \"heart\":\n      return \"❤️\";\n    case \"person\":\n      return \"🧑\";\n\n  }\n  return \"📚\";\n};\n\n\nconst Emoji: FunctionComponent<MyProps> = ({label, children}) => {\n  return <span role=\"img\" aria-label={label}>{children ? children : emoji(label)}</span>\n};\n\nexport default Emoji","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from \"react\";\nimport Emoji from \"./Emoji\";\nimport Result from \"../../model/Result\";\n\ninterface ResultImageProps {\n  result: string\n}\n\n\nconst ResultImage = ({result}: ResultImageProps) =>  {\n\n  switch (result) {\n    case Result.PENDING: return <Emoji label={Result.PENDING}>➖</Emoji>;\n    case Result.SUCCESS: return <Emoji label={Result.SUCCESS}>✔️</Emoji>;\n    case Result.FAILURE: return <Emoji label={Result.FAILURE}>⚠️</Emoji>;\n    case Result.IGNORED: return <Emoji label={Result.IGNORED}>💤</Emoji>;\n    case Result.ERROR: return <Emoji label={Result.ERROR}>❌</Emoji>;\n    case Result.SKIPPED: return <Emoji label={Result.SKIPPED}>⏭️</Emoji>;\n    case Result.COMPROMISED: return <Emoji label={Result.COMPROMISED}>⁉️️</Emoji>\n  }\n  return <span>{result}</span>;\n};\n\nexport default ResultImage","import {CSSProperties, FunctionComponent} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface MyProps {\n  style?: CSSProperties,\n  className?: string\n}\n\nconst FullWidthWrappingFlexBox: FunctionComponent<MyProps> = ({children, style, className}) => {\n  return <Box className={className} display={\"flex\"} flex={\"0 0 100%\"} flexWrap={\"wrap\"} maxWidth={\"100%\"} style={style}>{children}</Box>\n};\n\n\nexport default FullWidthWrappingFlexBox","import {CSSProperties, FunctionComponent} from \"react\";\nimport * as React from \"react\";\n\ninterface MyProps {\n  style?: CSSProperties\n}\n\nconst Pre: FunctionComponent<MyProps> = ({children, style}) => {\n  const mergedStyle = Object.assign({overflowX: \"auto\", flex: \"0 0 100%\"}, style );\n  return <pre style={mergedStyle}>\n    {children}\n  </pre>\n};\n\nexport default Pre","import {Button} from \"@material-ui/core\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport * as React from \"react\";\nimport {useEffect, useState} from \"react\";\n\n\ninterface MyProps {\n  text: string\n}\n\nconst OneClickCopy = ({text}: MyProps) => {\n  const [copied, setCopied] = useState(false);\n\n  useEffect(() => {\n    if (!copied) return;\n\n    const timer = setTimeout(() => {\n      setCopied(false)\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, [copied, setCopied]);\n\n  return <CopyToClipboard text={text} onCopy={() => setCopied(true)}>\n    <Button size={\"small\"} color={\"secondary\"} style={{margin: \"0 0 0 auto\"}} variant={\"outlined\"}>{copied ? \"copied\" : \"copy\"}</Button>\n  </CopyToClipboard>\n};\n\nexport default OneClickCopy","import React from \"react\";\nimport TestStep from \"../../../model/TestStep\";\nimport Expandable from \"../../organisms/Expandable\";\nimport ResultImage from \"../../atoms/ResultImage\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport {Box} from \"@material-ui/core\";\nimport Pre from \"../../atoms/Pre\";\nimport OneClickCopy from \"../../molecules/OneClickCopy\";\n\ntype MyProps = {\n  tellAll?: Array<TestStep>,\n  depth: number\n}\n\nconst TestStepsRecursive = ({tellAll, depth}: MyProps) => {\n  if (!tellAll || tellAll.length === 0) return null;\n\n  const testStep = (step: TestStep) => <FullWidthWrappingFlexBox style={{paddingTop: \"0.2rem\"}}>\n    <Box style={{paddingLeft: `${0.1 + depth * 2}rem`}}>\n      <ResultImage result={step.result}/> {step.description}\n    </Box>\n    {step.exception && !step.children && <FullWidthWrappingFlexBox key={step.number} style={{paddingLeft: `${0.1 + depth * 2}rem`}}>\n        <Pre style={{color: \"red\"}}>\n          <p>{step.exception.errorType} {step.exception.message}</p>\n          <p>{\n            step.exception.stackTrace.map((it) =>\n              `at ${it.declaringClass}#${it.methodName}(${it.fileName}:${it.lineNumber})`).join(\"\\n\")\n          }</p></Pre>\n\n        <OneClickCopy\n            text={`${step.exception.errorType} ${step.exception.message} \\n` + step.exception.stackTrace.map((it) =>\n              `at ${it.declaringClass}#${it.methodName}(${it.fileName}:${it.lineNumber})`).join(\"\\n\")}/>\n\n    </FullWidthWrappingFlexBox>}\n  </FullWidthWrappingFlexBox>;\n\n  const expandableTestStep = (step: TestStep) => <Expandable depths={3} whatsHidden={\n    <TestStepsRecursive depth={depth + 1} tellAll={step.children}/>\n  }>\n    {testStep(step)}\n  </Expandable>;\n\n  function stepVariant(step: TestStep) {\n    return <>\n      {!step.children && testStep(step)}\n      {step.children && expandableTestStep(step)}\n    </>\n  }\n\n  return <Box>\n    {tellAll.map(step => <React.Fragment key={step.number}>{stepVariant(step)}</React.Fragment>)}\n  </Box>\n};\nexport default TestStepsRecursive","import ResultImage from \"../../atoms/ResultImage\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport React from \"react\";\nimport TestOutcome from \"../../../model/TestOutcome\";\nimport Emoji from \"../../atoms/Emoji\";\n\ninterface MyProps {\n  tell: TestOutcome\n}\n\nconst OutComeHeading = ({tell}: MyProps) => {\n  return <FullWidthWrappingFlexBox>\n      <Emoji label={\"outcome\"}/> <ResultImage result={tell.result}/> {tell.title}\n  </FullWidthWrappingFlexBox>\n};\n\nexport default OutComeHeading","import React from \"react\";\nimport TestOutcome from \"../../../model/TestOutcome\";\nimport {Box, useTheme} from \"@material-ui/core\";\nimport {colorFor} from \"../../App\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\n\ntype MyProps = {\n  tell: TestOutcome\n}\nconst OutcomeDescription = ({tell}: MyProps) => {\n  const theme = useTheme();\n\n  return <Box style={{padding: \"1rem\", overflow: \"hidden\"}}>\n    <FullWidthWrappingFlexBox>\n      {tell.tags.map(({type, displayName, name}) => (\n        <span style={{\n          color: theme.palette.text.primary,\n          background: colorFor(type, \"1F\"),\n          border: `1px solid ${colorFor(type)}`,\n          borderRadius: \"5px\",\n          marginRight: \"0.5rem\",\n          padding: \"0.2rem\"\n        }} key={`${type}${displayName}`}>{type}:{displayName ? displayName : name}\n        </span>))}\n    </FullWidthWrappingFlexBox>\n    { tell.scenarioOutline && tell.scenarioOutline.length > 0 && <><br/><br/><span>\n      <strong>outline:</strong> {tell.scenarioOutline}\n    </span></>}\n    { tell.description && tell.description.length > 0 && <><br/><br/><span>\n      <strong>description:</strong> {tell.description}\n    </span></>}\n\n  </Box>\n};\n\nexport default OutcomeDescription","import React from 'react';\n\nimport TestOutcome from \"../../../model/TestOutcome\";\nimport Expandable from \"../../organisms/Expandable\";\nimport TestStepsRecursive from \"./TestStepsRecursive\";\nimport OutcomeHeading from \"./OutcomeHeading\"\nimport OutcomeDescription from \"./OutcomeDescription\"\nimport {Box, useTheme} from \"@material-ui/core\";\nimport {colorOf} from \"../../../model/Result\";\n\ntype MyProps = {\n  tell: TestOutcome\n}\n\n\nconst Outcome = ({tell}: MyProps) => {\n  const theme = useTheme();\n  return <>\n    <Box className={\"outcome\"} style={{width: \"100%\", borderTopLeftRadius: \"10px\", borderBottomLeftRadius: \"10px\", margin: \"0.2rem\", borderLeft: `0.2rem solid ${colorOf(tell.result)}`, backgroundColor: theme.palette.background.default, paddingLeft: \"0.5rem\"}}>\n      <Expandable depths={2} whatsHidden={<>\n        <OutcomeDescription tell={tell} />\n        <TestStepsRecursive depth={0} tellAll={tell.testSteps}/>\n      </>}>\n        <OutcomeHeading tell={tell}/>\n      </Expandable>\n    </Box>\n  </>\n};\n\n\nexport default Outcome;","import React from \"react\";\nimport useGlobalState from \"../../../state\";\nimport ResultImage from \"../../atoms/ResultImage\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport {Box, useTheme} from \"@material-ui/core\";\n\n\ninterface MyProps {\n  tell: string\n}\n\nconst Narrative = ({tell}: MyProps) => {\n\n  const [outcomes] = useGlobalState(\"filteredOutcomes\");\n  const theme = useTheme();\n\n  if (!tell) return null;\n\n  function renderExample(exampleLine: string) {\n    const outcomeTitle = exampleLine.split(\"} \")[1];\n    return <>\n      <Box style={{background: theme.palette.background.default}}>\n        <strong>{outcomeTitle}</strong>\n        {\n          outcomes\n            .filter(outcome => outcome.title.toLowerCase().includes(outcomeTitle.toLowerCase()))\n            .filter(outcome => outcome.testSteps[0].description.startsWith(\"Example\"))\n            .map(outcome => outcome.dataTable)\n            .map((data, i) => <React.Fragment key={i}>\n              <>\n                <FullWidthWrappingFlexBox>{data.scenarioOutline}</FullWidthWrappingFlexBox>\n                <FullWidthWrappingFlexBox>\n                  <Box flex={\"1 0 10%\"}/>\n                  {\n                    data.headers.map((header, j) => <Box key={`${i} ${j}`}\n                                                            flex={`1 0 ${90 / data.headers.length}%`}><strong>{header}</strong></Box>)\n                  }\n                </FullWidthWrappingFlexBox>\n                <FullWidthWrappingFlexBox>\n\n                  {\n                    data.rows.map((row, j) => <React.Fragment key={`${i} ${j}`}>\n                      <Box flex={\"1 0 10%\"}><ResultImage result={row.result}/></Box>\n                      {\n                        row.values.map((value, k) => <Box key={`${i} ${j} ${k}`}\n                                                          flex={`1 0 ${90 / row.values.length}%`}>{value}</Box>)\n                      }\n                    </React.Fragment>)\n                  }\n                </FullWidthWrappingFlexBox>\n              </>\n            </React.Fragment>)\n        }\n      </Box>\n    </>;\n  }\n\n// see serenity-core/serenity-model/src/main/java/net/thucydides/core/requirements/model/cucumber/DescriptionWithScenarioReferences.java\n  const lines: Array<any> = tell.split(\"\\n\").filter(it => it !== \"\").map((it, i) => it.includes(\"{Example\") ? <React.Fragment key={i}>{renderExample(it)}</React.Fragment> : it);\n\n  return <>{lines.map((it, i) => <FullWidthWrappingFlexBox style={{padding: \"0.5rem\", fontFamily: \"serif\"}} key={i}>{it}</FullWidthWrappingFlexBox>)}</>\n};\n\nexport default Narrative\n\n","import React, {FunctionComponent} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport ResultImage from \"../atoms/ResultImage\";\nimport _ from \"lodash\";\n\ninterface MyProps {\n  tellAll: Array<string>\n}\n\nconst RowWithResultAggregate: FunctionComponent<MyProps>= ({tellAll, children}) => {\n  const resultPairs = _.toPairs(_.countBy(tellAll));\n  let spaceNeeded = resultPairs.length * 10;\n\n  return <Box display={\"flex\"} flex={\"0 0 100%\"}>\n    <Box flex={`1 0 70%`}>\n      {children}\n    </Box>\n    <Box flex={`0 1 ${spaceNeeded}%`} style={{textAlign: \"right\"}}>\n      {\n        resultPairs.map(([result, count], i) => <React.Fragment key={i}> <ResultImage\n          result={result}/>&nbsp;{count}</React.Fragment>)\n      }\n    </Box>\n  </Box>\n};\n\nexport default RowWithResultAggregate","import FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport RowWithResultAggregate from \"../../molecules/RowWithResultAggregate\";\nimport React from \"react\";\nimport TestOutcome from \"../../../model/TestOutcome\";\nimport UserStory from \"../../../model/UserStory\";\nimport Emoji from \"../../atoms/Emoji\";\n\ninterface MyProps {\n  outcomes: Array<TestOutcome>,\n  tell: UserStory\n}\n\nconst StoryHeading = ({tell, outcomes}: MyProps) => {\n  return <FullWidthWrappingFlexBox className={\"storyHeading\"}>\n    <RowWithResultAggregate tellAll={outcomes.map(it => it.result)}>\n      <strong><Emoji label={\"story\"}/>&nbsp;{tell.storyName} ({outcomes.length})</strong>\n    </RowWithResultAggregate>\n  </FullWidthWrappingFlexBox>;\n};\n\nexport default StoryHeading","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {colorOf} from \"../../model/Result\";\nimport * as _ from \"lodash\";\n\ninterface MyProps {\n  tellAll: Array<string>\n}\n\n\nconst HorizontalResultPercentageLine = ({tellAll}: MyProps) => {\n  const counts = _.toPairs(_.countBy(tellAll));\n\n  return <Box height={\"0.2rem\"} display={\"flex\"} overflow={\"hidden\"} width={\"99%\"} margin={\"0 auto\"}>\n    {\n      counts.map(([result, count]) => <React.Fragment key={result}>\n          <Box style={{borderRadius: \"10px\"}} height={\"100%\"} width={count * 100 / tellAll.length + \"%\"} bgcolor={colorOf(result)}/>\n        </React.Fragment>\n      )\n    }\n  </Box>\n};\n\nexport default HorizontalResultPercentageLine","import Actor from \"../../model/Actor\";\nimport FullWidthWrappingFlexBox from \"./FullWidthWrappingFlexBox\";\nimport React from \"react\";\nimport {Box, useTheme} from \"@material-ui/core\";\nimport Emoji from \"../atoms/Emoji\";\n\ntype MyProps1 = {\n  tellAll: Array<Actor>\n}\nconst Actors = ({tellAll}: MyProps1) => {\n  const theme = useTheme();\n  return <>\n    <FullWidthWrappingFlexBox>\n      {\n        tellAll.map((it, i) => <Box padding={\"0.2rem\"} border={\"0.1rem solid \" + theme.palette.secondary.main} margin={\"0.2rem\"} key={i} borderRadius={\"5px\"}>\n          <Emoji label={\"person\"}/>&nbsp;\"{it.name}\" can: {it.can.join(\", \")}\n        </Box>)\n      }\n    </FullWidthWrappingFlexBox>\n  </>\n};\nexport default Actors","import React from \"react\";\nimport Expandable from \"../../organisms/Expandable\";\nimport UserStory from \"../../../model/UserStory\";\nimport TestOutcome from \"../../../model/TestOutcome\";\nimport Outcome from \"../story/Outcome\";\nimport Narrative from \"./Narrative\";\nimport StoryHeading from \"./StoryHeading\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport {useTheme} from \"@material-ui/core\";\nimport HorizontalResultPercentageLine from \"../../atoms/HorizontalResultPercentageLine\";\nimport * as _ from \"lodash\";\nimport Actors from \"../../molecules/Actors\";\n\ninterface StoryProps {\n  tell: UserStory,\n  outcomes: Array<TestOutcome>,\n}\n\n\nconst Story = ({tell, outcomes}: StoryProps) => {\n  const theme = useTheme();\n  const actors = _.uniqBy(outcomes.filter(it => it.actors).map(it => it.actors).flat(), (it => it.name));\n\n  return <>\n    <HorizontalResultPercentageLine tellAll={outcomes.map(it => it.result)}/>\n    <FullWidthWrappingFlexBox className={\"story\"} style={{\n      paddingLeft: \"0.5rem\",\n      backgroundColor: theme.palette.background.paper,\n      borderTopLeftRadius: \"10px\",\n      borderBottomLeftRadius: \"10px\",\n      marginBottom: \"1rem\"\n    }}>\n      <Expandable depths={1} whatsHidden={\n        <>\n          <Narrative tell={tell.narrative}/>\n          {\n            actors && actors.length > 0 && <>\n              <Actors tellAll={actors}/>\n            </>\n          }\n          {outcomes.map((it) => <Outcome key={it.name + it.startTime} tell={it}/>)}\n        </>\n      }>\n        <StoryHeading tell={tell} outcomes={outcomes}/>\n      </Expandable>\n    </FullWidthWrappingFlexBox>\n  </>\n\n};\n\nexport default Story","import React from \"react\";\nimport _ from 'lodash';\nimport useGlobalState from '../../state';\nimport Story from \"./story/Story\";\nimport FullWidthWrappingFlexBox from \"../molecules/FullWidthWrappingFlexBox\";\n\n\nconst ByStory = () => {\n  let [outcomes] = useGlobalState('filteredOutcomes');\n  const outcomesByStoryId = _.groupBy(outcomes, o => o.userStory.id);\n  const storyName = (it: string) => outcomesByStoryId[it][0].userStory.storyName.toLowerCase();\n  return <>\n    <FullWidthWrappingFlexBox className={\"stories\"} style={{padding: \"0.25rem\"}}>\n    {_.sortBy(_.keys(outcomesByStoryId), storyName).map((storyId) => {\n      return <React.Fragment key={storyId}>\n          <Story tell={outcomesByStoryId[storyId][0].userStory} outcomes={outcomesByStoryId[storyId]}/>\n      </React.Fragment>;\n    })}\n    </FullWidthWrappingFlexBox>\n  </>\n};\n\nexport default ByStory","import RestQuery from \"./RestQuery\"\nimport Exception from \"./Exception\"\nimport Result from \"./Result\";\n\nexport interface Screenshot {\n  screenshot: string\n}\n\ninterface TestStep {\n  number: number\n  result: Result\n  description: string\n  duration: number\n  startTime: Date\n  screenshots: Array<Screenshot>\n  children: Array<TestStep>\n  restQuery: RestQuery\n  exception: Exception\n}\n\nexport default TestStep\n\nexport const flatSteps = (testSteps: Array<TestStep>) => {\n  let result: Array<TestStep> = [];\n  if (!testSteps || testSteps.length === 0) return result;\n  testSteps.forEach(testStep => {\n    result.push(testStep);\n    result.push(...flatSteps(testStep.children));\n  });\n  return result;\n};","import React from \"react\";\nimport TestStep from \"../../../model/TestStep\";\nimport ResultImage from \"../../atoms/ResultImage\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport {Box} from \"@material-ui/core\";\nimport Emoji from \"../../atoms/Emoji\";\n\ntype MyProps = {\n  tellAll?: Array<TestStep>,\n  depth: number,\n  highlight: number\n}\n\nconst TestStepDescriptions = ({tellAll, depth, highlight}: MyProps) => {\n  if (!tellAll || tellAll.length === 0) return null;\n\n  const testStep = (step: TestStep) => <FullWidthWrappingFlexBox style={{paddingTop: \"0.2rem\"}}>\n    <Box style={{paddingLeft: `${0.1 + depth * 2}rem`, background: step.number === highlight ? \"#88888830\" : \"none\"}}>\n      <ResultImage result={step.result}/> {step.description} {step.screenshots && step.screenshots.map((it, i) => <Emoji label={\"screenshots\"} key={i}/>)}\n    </Box>\n  </FullWidthWrappingFlexBox>;\n\n  function stepVariant(step: TestStep) {\n    if (!step.children || step.children.length === 0) return testStep(step);\n    return <>\n      {testStep(step)}\n      {step.children && step.children.length > 0 && <TestStepDescriptions depth={depth + 1} tellAll={step.children} highlight={highlight}/>}\n    </>;\n  }\n\n  return <>\n      {tellAll.map(step => <React.Fragment key={step.number}>{stepVariant(step)}</React.Fragment>)}\n  </>\n};\nexport default TestStepDescriptions","import FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport {Button, useTheme} from \"@material-ui/core\";\nimport Emoji from \"../../atoms/Emoji\";\nimport React from \"react\";\n\ninterface MyProps1 {\n  setIndex: Function\n  index: number\n  items: number\n  fileName: string\n}\n\nconst Controls = ({setIndex, index, items, fileName}: MyProps1) => {\n  const theme = useTheme();\n  const controlStyle = {border: `3px solid ${theme.palette.primary.main}DD`, margin: \"0.5rem\"};\n\n  return <FullWidthWrappingFlexBox style={{padding: \"1rem\", justifyContent: \"space-around\"}}>\n    <Button style={controlStyle} variant={\"text\"} onClick={() => setIndex(Math.max(index - 1, 0))}>&lt;</Button>\n    {\n      [...Array(items)].map((_, i) => <Button key={i} onClick={() => setIndex(i)} style={{\n        minWidth: \"20px\",\n        background: i === index ? \"#88888860\" : \"none\"\n      }} variant={\"text\"}>{i === index ? <Emoji label={\"screenshots\"}/> : \"*\"}</Button>)\n    }\n    <Button style={controlStyle} variant={\"text\"}\n            onClick={() => setIndex(Math.min(index + 1, items - 1))}>&gt;</Button>\n    <Button style={controlStyle} variant={\"text\"} href={`./screenshots/${fileName}`} target={\"_blank\"}>\n      100%\n    </Button>\n  </FullWidthWrappingFlexBox>;\n};\n\nexport default Controls","import FullWidthWrappingFlexBox from \"./FullWidthWrappingFlexBox\";\nimport React from \"react\";\nimport {useTheme} from \"@material-ui/core\";\n\ninterface MyProps1 {\n  fileName: string\n  width: number\n}\n\nconst stage = process.env.REACT_APP_STAGE;\nconst screenshotDir = stage === \"template\" ? \"../\" : \"./screenshots/\";\nconst ScreenShot = ({fileName, width}: MyProps1) => {\n  const theme = useTheme();\n  return <a style={{width: \"100%\"}} href={screenshotDir + fileName} rel={\"noopener noreferrer\"} target={\"_blank\"}><FullWidthWrappingFlexBox\n    style={{\n      backgroundColor: theme.palette.background.paper,\n      backgroundImage: \"url('\" + screenshotDir + fileName + \"')\",\n      backgroundSize: \"contain\",\n      backgroundPosition: \"center\",\n      backgroundRepeat: \"no-repeat\",\n      //boxShadow: `${colorOf(tell.result)} -1px -1px 10px 2px`,\n      width: \"100%\",\n      display: \"block\",\n      height: 0.8 * width + \"rem\"\n    }}\n  /></a>;\n};\n\nexport default ScreenShot","import TestStep, {flatSteps} from \"../../../model/TestStep\";\nimport React, {useState} from \"react\";\nimport TestOutcome from \"../../../model/TestOutcome\";\nimport ResultImage from \"../../atoms/ResultImage\";\nimport {Box} from \"@material-ui/core\";\nimport * as _ from \"lodash\";\nimport TestStepDescriptions from \"./TestStepDescriptions\";\nimport Controls from \"./Controls\";\nimport ScreenShot from \"../../molecules/ScreenShot\";\n\ninterface MyProps {\n  tell: TestOutcome\n  width: number\n}\n\nfunction hasScreenshots(it: TestStep) {\n  return it.screenshots && it.screenshots.length > 0;\n}\n\nconst Screenshots = ({tell, width}: MyProps) => {\n  const testSteps = flatSteps(tell.testSteps);\n\n  const screenshotToTestStep = testSteps.filter(hasScreenshots)\n    .map(step => step.screenshots.map(screenshot => ({step, screenshot: screenshot.screenshot})))\n    .flat();\n\n  const sortedByStepNumber =_.sortBy(screenshotToTestStep, it => it.step.number);\n  const [index, setIndex] = useState(0);\n  const {screenshot, step} = sortedByStepNumber[index];\n\n  return <React.Fragment>\n\n    <Box flex={`1 1 ${width}rem`} maxWidth={\"none\"} padding={\"0.5rem\"}>\n      <ScreenShot fileName={screenshot} width={width}/>\n      <Controls fileName={screenshot} index={index} setIndex={setIndex} items={sortedByStepNumber.length}/>\n    </Box>\n\n    <Box flex={`1 1 ${width}rem`} maxWidth={\"none\"} padding={\"0.5rem\"}>\n      <Box style={{padding: \"0.2rem\", margin: \"0.5rem\"}}>\n        <ResultImage result={tell.result}/> {tell.title}\n      </Box>\n      <TestStepDescriptions depth={0} tellAll={tell.testSteps} highlight={step.number}/>\n    </Box>\n\n  </React.Fragment>\n};\n\nexport default Screenshots","import React, {useState} from \"react\";\nimport _ from 'lodash';\nimport useGlobalState from '../../state';\nimport FullWidthWrappingFlexBox from \"../molecules/FullWidthWrappingFlexBox\";\nimport TestStep, {Screenshot} from \"../../model/TestStep\";\nimport Emoji from \"../atoms/Emoji\";\nimport Screenshots from \"./screenshots/Screenshots\";\nimport {Button} from \"@material-ui/core\";\n\nconst findScreenshots = (testSteps: Array<TestStep>) => {\n  let steps: Array<Screenshot> = [];\n  if (!testSteps || testSteps.length === 0) return steps;\n  steps = steps.concat(testSteps.filter(it => it.screenshots && it.screenshots.length > 0).map(it => it.screenshots).flat());\n  testSteps.forEach(testStep => steps = steps.concat(findScreenshots(testStep.children)));\n  return steps;\n};\n\n\nconst ByScreenshots = () => {\n  let [outcomes] = useGlobalState('filteredOutcomes');\n  let [itemsDisplayed, setItemsDisplayed] = useState(5);\n  const outcomesWithScreenshots = outcomes.filter(it => findScreenshots(it.testSteps).length > 0);\n  const sorted = _.sortBy(outcomesWithScreenshots, it => it.userStory.id).slice(0, itemsDisplayed);\n  const outcomesByStoryId = _.groupBy(sorted, o => o.userStory.id);\n\n  const width = 30;\n  return <>\n    <FullWidthWrappingFlexBox style={{paddingTop: \"1rem\"}}>\n      {_.keys(outcomesByStoryId).map((storyId) => {\n        return <React.Fragment key={storyId}>\n          <FullWidthWrappingFlexBox style={{paddingTop: \"1rem\"}}>\n            <FullWidthWrappingFlexBox style={{justifyContent: \"center\", fontSize: \"2rem\"}}><Emoji\n              label={\"story\"}/>&nbsp;{outcomesByStoryId[storyId][0].userStory.storyName}</FullWidthWrappingFlexBox>\n            {\n              outcomesByStoryId[storyId].map((outcome, i) =>\n                <React.Fragment key={i + storyId}>\n                  <FullWidthWrappingFlexBox style={{flex: `1 1 ${width * 2}rem`}}>\n                    <Screenshots tell={outcome} width={width}/>\n                  </FullWidthWrappingFlexBox>\n                </React.Fragment>\n              )\n            }\n          </FullWidthWrappingFlexBox>\n        </React.Fragment>;\n      })}\n    </FullWidthWrappingFlexBox>\n    {itemsDisplayed < outcomesWithScreenshots.length && <FullWidthWrappingFlexBox>\n      <Button variant={\"contained\"} size={\"small\"} color={\"secondary\"} fullWidth style={{margin: \"1rem\"}}\n              onClick={() => setItemsDisplayed(itemsDisplayed + 5)}>\n        show more..\n      </Button>\n    </FullWidthWrappingFlexBox>\n    }\n  </>\n};\n\nexport default ByScreenshots","import {Box} from \"@material-ui/core\";\nimport _ from 'lodash';\nimport React from \"react\";\nimport useGlobalState from \"../../../state\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport {colorOf} from \"../../../model/Result\";\n\nconst ResultPercentage = () => {\n\n  const [outcomes] = useGlobalState(\"filteredOutcomes\");\n  const counts = _.toPairs(_.countBy(outcomes, it => it.result));\n\n  return <>\n      <strong>{outcomes.length} results</strong>\n      <FullWidthWrappingFlexBox>\n        <Box flex={\"1 0 50px\"}>\n          {\n            counts.map(([result, count]) =>\n              <Box key={result} height={(count * 2 / outcomes.length) * counts.length + \"rem\"} flex={`0 0 50px`}\n                   style={{background: colorOf(result)}}>\n              </Box>\n            )\n          }\n        </Box>\n        <Box flex={\"1 0 200px\"} lineHeight={2}>\n          {\n            counts.map(([result, count]) => <React.Fragment key={result}>\n                <FullWidthWrappingFlexBox style={{justifyContent: \"space-between\", paddingLeft: \"1rem\"}}>\n                  <Box>{count}</Box>\n                  <Box>{result.toLowerCase()}</Box>\n                  <Box>({(count * 100 / outcomes.length).toFixed(1)}%)</Box>\n                </FullWidthWrappingFlexBox>\n              </React.Fragment>\n            )\n          }\n        </Box>\n      </FullWidthWrappingFlexBox>\n  </>;\n};\n\n\nexport default ResultPercentage","import React, {useState} from \"react\";\nimport useGlobalState from \"../../../state\";\nimport prettyMilliseconds from \"pretty-ms\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport Result, {colorOf} from \"../../../model/Result\";\nimport {Box, useTheme} from \"@material-ui/core\";\n\nconst DurationsDistribution = () => {\n  const theme = useTheme();\n  const [outcomes] = useGlobalState(\"filteredOutcomes\");\n  const [divisions] = useState(30);\n\n  const maximumDuration = Math.max(...outcomes.map(it => it.duration));\n  let bars: Array<Array<Result>> = [];\n\n  for (let i = 0; i < divisions; i++) {\n    bars.push(\n      outcomes\n        .filter(it => {\n          // FIXME fencepost problems, pick a different algorithm!\n          return (it.duration < Math.round(maximumDuration / divisions * i + maximumDuration / divisions))\n              && (it.duration >= Math.round(maximumDuration / divisions * (i - 1) + maximumDuration / divisions));\n          }\n        )\n        .map(it => it.result)\n        .sort().reverse()\n    )\n  }\n\n  const maxBarItems = Math.max(...bars.map(it => it.length));\n  const heightPixel = 150;\n\n  return <>\n      <strong>duration distribution </strong>\n      {/*<TextField label=\"divisions\" variant=\"outlined\" value={divisions}\n                 onChange={(e) => setDivisions(parseInt(e.target.value))}/>*/}\n      <FullWidthWrappingFlexBox>\n        <FullWidthWrappingFlexBox style={{minHeight: `${heightPixel}px`, background: theme.palette.background.paper}}>\n          {bars.map(\n            (bar, i) => {\n              return <Box key={i} display={\"flex\"} flexDirection={\"column\"} flex={`0 0 ${(100 / divisions)}%`}\n                          justifyContent=\"flex-end\">\n                {bar.map((result, j) =>\n                  <Box key={`${i}_${j}`} style={{\n                    background: colorOf(result),\n                    borderBottom: \"1px solid black\",\n                    borderRight: \"1px solid black\",\n                    borderTop: \"1px solid #DDD\",\n                    borderLeft: \"1px solid #888\",\n                    height: `${heightPixel / maxBarItems}px`\n                  }}/>\n                )}\n              </Box>;\n            }\n          )}\n        </FullWidthWrappingFlexBox>\n        <FullWidthWrappingFlexBox style={{justifyContent: \"space-between\"}}>\n          <span>|</span><span>|</span><span>|</span><span>|</span><span>|</span>\n        </FullWidthWrappingFlexBox>\n        <FullWidthWrappingFlexBox style={{justifyContent: \"space-between\"}}>\n          <span>0</span><span>{prettyMilliseconds(maximumDuration * 0.25)}</span><span>{prettyMilliseconds(maximumDuration * 0.5)}</span><span>{prettyMilliseconds(maximumDuration * 0.75)}</span><span>{prettyMilliseconds(maximumDuration)}</span>\n        </FullWidthWrappingFlexBox>\n      </FullWidthWrappingFlexBox>\n  </>\n\n\n};\n\nexport default DurationsDistribution","import React, {useState} from \"react\";\nimport useGlobalState from \"../../../state\";\nimport prettyMilliseconds from \"pretty-ms\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport {Box, Slider} from \"@material-ui/core\";\nimport _ from \"lodash\";\n\nconst DurationStatistics = () => {\n  const [outcomes] = useGlobalState(\"filteredOutcomes\");\n\n  const sortedDurations = outcomes.map(it => it.duration).sort((a, b) => a - b);\n  const [percentiles, setPercentiles] = useState([20, 80, 95]);\n\n  function percentile(percent: number) {\n    const index = Math.floor((sortedDurations.length - 1) * 0.01 * percent);\n\n\n    return sortedDurations[index]\n  }\n\n  return <>\n        <strong>duration per test outcome</strong>\n    <FullWidthWrappingFlexBox style={{justifyContent: \"space-between\", lineHeight: 3}}>\n      <Box>\n        <FullWidthWrappingFlexBox>\n          <Box>\n              {\n                percentiles.sort().reverse().map((it, i) => <Box key={i + \"_\" + it}>{it}th percentile: {\"<=\"}{prettyMilliseconds(percentile(it))}</Box>)\n              }\n          </Box>\n          <Box>\n            <Slider\n              defaultValue={[20, 80, 95]}\n              aria-labelledby=\"discrete-slider-small-steps\"\n              step={1}\n              marks\n              min={0}\n              max={99.9}\n              valueLabelDisplay=\"auto\"\n              onChange={(e, v) => (v instanceof Array) ? setPercentiles(v) : setPercentiles([v])}\n              orientation={\"vertical\"}\n            />\n          </Box>\n        </FullWidthWrappingFlexBox>\n      </Box>\n      <Box>\n          <Box>\n            max {prettyMilliseconds(sortedDurations[sortedDurations.length - 1])}\n          </Box>\n          <Box>\n            avg {prettyMilliseconds(_.mean(sortedDurations))}\n          </Box>\n          <Box>min {prettyMilliseconds(sortedDurations[0])}</Box>\n      </Box>\n    </FullWidthWrappingFlexBox>\n\n  </>\n\n\n};\n\nexport default DurationStatistics","import React, {useEffect} from \"react\";\nimport useGlobalState from \"../../../state\";\nimport prettyMilliseconds from \"pretty-ms\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport {Box, Button, useTheme} from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport {flatSteps} from \"../../../model/TestStep\";\nimport Pre from \"../../atoms/Pre\";\n\nconst StepDurations = () => {\n  const theme = useTheme();\n  const [outcomes] = useGlobalState(\"filteredOutcomes\");\n\n  const longestRunningSteps = _.sortBy(flatSteps(outcomes.map(it => it.testSteps).flat()).filter(it => !it.children), it => it.duration).reverse();\n\n  const [selected ,setSelected] = useGlobalState(\"selectedStep\");\n  const grouped = _.groupBy(longestRunningSteps, it => it.description);\n  const allMax = longestRunningSteps[0].duration;\n  const results = 50;\n\n  useEffect(() => {\n    if (selected === \"\") {\n      setSelected(longestRunningSteps[0].description)\n    }\n  }, [selected, setSelected, longestRunningSteps]);\n\n  return <>\n        <strong>top {results} longest running steps, max {prettyMilliseconds(allMax)}</strong>\n      <FullWidthWrappingFlexBox style={{maxHeight: \"15rem\", overflow: \"auto\"}}>\n        {\n          _.keys(grouped).slice(0, results).map(it => {\n              const steps = grouped[it];\n              const min = Math.min(...steps.map(it => it.duration));\n              const max = Math.max(...steps.map(it => it.duration));\n              const formatted = prettyMilliseconds(max) === prettyMilliseconds(min) ? prettyMilliseconds(min) : prettyMilliseconds(min) + \" - \" + prettyMilliseconds(max);\n\n              return <React.Fragment key={it + steps.length + (it === selected)}>\n                <Button fullWidth\n                        onClick={() => setSelected(it)}\n                        style={{\n                          padding: \"0.1rem\",\n                          backgroundColor: it === selected ? theme.palette.secondary.main : \"none\"\n                        }}>\n\n                  <FullWidthWrappingFlexBox style={{position: \"relative\"}}>\n\n                    <Box\n                      style={{\n                        width: `${max / allMax * 100}%`,\n                        background: `linear-gradient(90deg, ${theme.palette.background.paper} ${min / max * 100}%, ${theme.palette.secondary.main} ${min / max * 100}%, ${theme.palette.background.paper} ${Math.min(100, (min / max * 100) + 30)}%)`,\n                        borderRight: \"1px solid \" + theme.palette.text.primary,\n                        borderBottom: \"1px solid #A0A0A0\",\n                        overflow: \"visible\",\n                        minHeight: \"1.5rem\",\n                        position: \"relative\"\n                      }}>\n                    </Box>\n                    <Pre style={{\n                      position: \"absolute\",\n                      top: \"0\",\n                      left: \"0.5rem\",\n                      maxWidth: \"90%\",\n                      color: theme.palette.text.primary,\n                      maxHeight: \"2rem\",\n                      overflow: \"hidden\"\n                    }}><span\n                      style={{backgroundColor: `#f50057${Math.min(0xFF, steps.length * 5).toString(16)}`}}>{steps.length}x</span> {formatted} {it.replace(/\\n/g, \" \")}\n                    </Pre>\n                  </FullWidthWrappingFlexBox>\n                </Button>\n              </React.Fragment>;\n            }\n          )\n        }\n      </FullWidthWrappingFlexBox>\n  </>\n\n\n};\n\nexport default StepDurations","import React from \"react\";\nimport useGlobalState from \"../../../state\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport {Box} from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport {flatSteps} from \"../../../model/TestStep\";\nimport {colorOf} from \"../../../model/Result\";\n\nconst UnsuccessfulOutcomes = () => {\n  const [outcomes] = useGlobalState(\"filteredOutcomes\");\n  const [filter] = useGlobalState(\"filter\");\n  const exceptionSteps = outcomes.map(it => flatSteps(it.testSteps)).flat()\n    .filter(it => !!it.exception)\n    .filter(it => !it.children)\n    .filter(it => filter.results.length === 0 || filter.results.includes(it.result))\n    .map(it => `${it.exception.errorType}/${it.result}`);\n  const exceptionCount = _.countBy(exceptionSteps);\n\n  return <>\n      <FullWidthWrappingFlexBox>\n        <strong>overview of unsuccessful</strong>\n      </FullWidthWrappingFlexBox>\n\n      <FullWidthWrappingFlexBox>\n        <Box style={{maxHeight:\"15rem\", overflowY: \"auto\", overflowX: \"hidden\"}}>\n          {_.sortBy(_.keys(exceptionCount), it => exceptionCount[it]).reverse().map(it => <React.Fragment key={it}>\n            <Box style={{overflow: \"hidden\", border: `1px solid ${colorOf(it.split(\"/\")[1])}`, margin: \"0.2rem\", padding: \"0.2rem\", borderTopLeftRadius: \"10px\", borderBottomLeftRadius: \"10px\", borderLeft: `4px solid ${colorOf(it.split(\"/\")[1])}`}}>\n              <span style={{float: \"right\", whiteSpace: \"pre\"}}>{it.split(\"/\")[0]}&nbsp;-&nbsp;{exceptionCount[it]}</span>\n            </Box>\n          </React.Fragment>)}\n        </Box>\n      </FullWidthWrappingFlexBox>\n\n  </>\n\n\n};\n\nexport default UnsuccessfulOutcomes","import React from \"react\";\nimport useGlobalState from \"../../../state\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport {Box} from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport Result from \"../../../model/Result\";\nimport {colorFor} from \"../../App\";\nimport {joined} from \"../../../model/Tag\";\n\nconst UnsuccessfulTags = () => {\n  const [outcomes] = useGlobalState(\"filteredOutcomes\");\n  const tags = outcomes.filter(it => [Result.ERROR, Result.FAILURE, Result.COMPROMISED].includes(it.result))\n    .map(it => it.tags).flat();\n  const tagCount = _.countBy(tags, it => joined(it));\n  const uniqTags = _.uniqBy(tags, it => joined(it));\n\n  return <>\n      <FullWidthWrappingFlexBox>\n        <strong>tags unsuccessful</strong>\n      </FullWidthWrappingFlexBox>\n\n      <Box style={{maxHeight:\"15rem\", overflowY: \"auto\", overflowX: \"hidden\"}}>\n        {_.sortBy(uniqTags, it => tagCount[joined(it)]).reverse().map((it) => <React.Fragment key={joined(it)}>\n          <Box style={{overflow: \"hidden\", margin: \"0.2rem\", padding: \"0.2rem\", background: colorFor(it.type, \"1F\"), border: `1px solid ${colorFor(it.type)}`}} key={`${it.type}${it.displayName}`}>\n            <span style={{float: \"right\", whiteSpace: \"pre\"}}>{it.type}:{it.displayName ? it.displayName : it.name} - {tagCount[joined(it)]}</span>\n          </Box>\n        </React.Fragment>)}\n      </Box>\n </>\n\n\n};\n\nexport default UnsuccessfulTags","import React, {useState} from \"react\";\nimport useGlobalState from \"../../../state\";\nimport prettyMilliseconds from \"pretty-ms\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport Result, {colorOf} from \"../../../model/Result\";\nimport {Box, useTheme} from \"@material-ui/core\";\nimport {flatSteps} from \"../../../model/TestStep\";\n\nconst StepDurationsDistribution = () => {\n  const theme = useTheme();\n  const [outcomes] = useGlobalState(\"filteredOutcomes\");\n  const [selected] = useGlobalState(\"selectedStep\");\n  const [divisions] = useState(30);\n  if (selected === \"\") return null;\n\n  const steps = outcomes.map(it => flatSteps(it.testSteps)).flat().filter(it => it.description === selected);\n  if (steps.length === 0) return null;\n\n  const maximumDuration = Math.max(...steps.map(it => it.duration));\n  let bars: Array<Array<Result>> = [];\n\n  for (let i = 0; i < divisions; i++) {\n    bars.push(\n      steps\n        .filter(it => {\n          return (it.duration <= Math.round(maximumDuration / divisions * i + maximumDuration / divisions))\n              && (it.duration > Math.round(maximumDuration / divisions * (i - 1) + maximumDuration / divisions));\n          }\n        )\n        .map(it => it.result)\n        .sort().reverse()\n    )\n  }\n\n  const maxBarItems = Math.max(...bars.map(it => it.length));\n  const height = 12;\n\n  return <>\n\n      <strong>step duration distribution </strong>\n      <FullWidthWrappingFlexBox>\n       <Box>\n         {steps[0].description}\n       </Box>\n      {/*<TextField label=\"divisions\" variant=\"outlined\" value={divisions}\n                 onChange={(e) => setDivisions(parseInt(e.target.value))}/>*/}\n      <FullWidthWrappingFlexBox>\n        <FullWidthWrappingFlexBox style={{minHeight: `${height}rem`, background: theme.palette.background.paper}}>\n          {bars.map(\n            (bar, i) => {\n              return <Box key={steps[0].description + i} display={\"flex\"} flexDirection={\"column\"} flex={`0 0 ${(100 / (divisions))}%`}\n                          justifyContent=\"flex-end\">\n                {bar.map((result, j) =>\n                  <Box key={`${i}_${j}`} style={{\n                    background: colorOf(result),\n                    borderBottom: \"1px solid black\",\n                    borderRight: \"1px solid black\",\n                    borderTop: \"1px solid #DDD\",\n                    borderLeft: \"1px solid #888\",\n                    height: `${height / maxBarItems}rem`\n                  }}/>\n                )}\n              </Box>;\n            }\n          )}\n        </FullWidthWrappingFlexBox>\n        <FullWidthWrappingFlexBox style={{justifyContent: \"space-between\"}}>\n          <span>|</span><span>|</span><span>|</span><span>|</span><span>|</span>\n        </FullWidthWrappingFlexBox>\n        <FullWidthWrappingFlexBox style={{justifyContent: \"space-between\"}}>\n          <span>0</span><span>{prettyMilliseconds(maximumDuration * 0.25)}</span><span>{prettyMilliseconds(maximumDuration * 0.5)}</span><span>{prettyMilliseconds(maximumDuration * 0.75)}</span><span>{prettyMilliseconds(maximumDuration)}</span>\n        </FullWidthWrappingFlexBox>\n      </FullWidthWrappingFlexBox>\n      </FullWidthWrappingFlexBox>\n  </>\n\n\n};\n\nexport default StepDurationsDistribution","import React from 'react';\nimport ResultPercentage from \"./ResultPercentage\";\nimport DurationsDistribution from \"./DurationsDistribution\";\nimport DurationStatistics from \"./DurationStatistics\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport useGlobalState from '../../../state';\nimport StepDurations from \"./StepDurations\";\nimport UnsuccessfulOutcomes from \"./UnsuccessfulOutcomes\";\nimport UnsuccessfulTags from './UnsuccessfulTags';\nimport StepDurationsDistribution from \"./StepDurationsDistribution\";\nimport {Box} from \"@material-ui/core\";\n\nconst Stats = () => {\n    const [outcomes] = useGlobalState(\"filteredOutcomes\");\n    if (outcomes.length === 0) {\n      return null\n    }\n\n  const defaultPadding = \"0.5rem\";\n  return <>\n      <FullWidthWrappingFlexBox>\n        <Box padding={defaultPadding} flex={\"1 1 18rem\"}>\n          <ResultPercentage/>\n        </Box>\n\n        <Box padding={defaultPadding} flex={\"1 1 20rem\"}>\n          <UnsuccessfulOutcomes/>\n        </Box>\n        <Box padding={defaultPadding} flex={\"1 1 25rem\"}>\n          <UnsuccessfulTags/>\n        </Box>\n\n        <Box padding={defaultPadding} flex={\"1 1 18rem\"}>\n          <DurationsDistribution/>\n        </Box>\n        <Box padding={defaultPadding} flex={\"0 1 24rem\"}>\n          <DurationStatistics/>\n        </Box>\n        <Box padding={defaultPadding} flex={\"1 1 30rem\"}>\n          <StepDurations/>\n        </Box>\n        <Box padding={defaultPadding} flex={\"1 1 15rem\"}>\n          <StepDurationsDistribution/>\n        </Box>\n      </FullWidthWrappingFlexBox>\n    </>;\n\n  }\n;\n\n\nexport default Stats;\n","import React from \"react\"\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport {Box} from \"@material-ui/core\";\nimport HighlightOnHover from \"../../organisms/HighlightOnHover\";\nimport ScreenShot from \"../../molecules/ScreenShot\";\nimport TestStep from \"../../../model/TestStep\";\n\ninterface MyProps {\n  tell: TestStep,\n  depth: number\n}\n\nconst ScreenShots = ({tell, depth}: MyProps) => {\n\n  const screenshotWidth = 20;\n  return <>\n    {\n      tell.screenshots && tell.result && <FullWidthWrappingFlexBox style={{paddingLeft: `${0.1 + depth * 2}rem`}}>\n        {tell.screenshots.map((it, i) => <React.Fragment key={i}><Box flex={`0 1 ${screenshotWidth + 1}rem`}>\n          <HighlightOnHover border>\n            <ScreenShot fileName={it.screenshot} width={screenshotWidth}/>\n          </HighlightOnHover>\n        </Box></React.Fragment>)}\n      </FullWidthWrappingFlexBox>\n    }\n    </>\n};\n\nexport default ScreenShots","import TestStep, {flatSteps} from \"../../../model/TestStep\";\nimport React, {FunctionComponent} from \"react\";\nimport Expandable from \"../../organisms/Expandable\";\nimport TestStepsRecursive from \"./TestStepsRecursive\";\nimport RowWithResultAggregate from \"../../molecules/RowWithResultAggregate\";\n\ninterface ExpandableTestStepProps {\n  expandOnDepths: number\n  depth: number\n  tellAll: Array<TestStep>\n}\n\nexport const ExpandableTestStep: FunctionComponent<ExpandableTestStepProps> = ({children, tellAll, depth, expandOnDepths}) => {\n  return <Expandable depths={expandOnDepths} whatsHidden={\n    <TestStepsRecursive depth={depth + 1} tellAll={tellAll} expandOnDepths={expandOnDepths + 1}/>\n  }>\n    <RowWithResultAggregate tellAll={flatSteps(tellAll).map(it => it.result)}>\n      {children}\n    </RowWithResultAggregate>\n  </Expandable>\n};","import RestQuery from \"../../../model/RestQuery\";\nimport * as React from \"react\";\nimport Expandable from \"../../organisms/Expandable\";\nimport OneClickCopy from \"../../molecules/OneClickCopy\";\nimport {Button} from \"@material-ui/core\";\nimport Pre from \"../../atoms/Pre\";\n\ninterface MyProps {\n  tell: RestQuery,\n  expandOnDepths: number\n}\n\nconst DisplayRestQuery = ({tell, expandOnDepths}: MyProps) => {\n\n  return <Expandable depths={expandOnDepths} whatsHidden={<>\n    <OneClickCopy text={JSON.stringify(tell, undefined, 2)}/>\n    <Pre>{JSON.stringify(tell, undefined, 2)}</Pre>\n  </>}><Button variant={\"contained\"} color={\"secondary\"}>query</Button>\n  </Expandable>\n};\n\nexport default DisplayRestQuery","import FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport Pre from \"../../atoms/Pre\";\nimport OneClickCopy from \"../../molecules/OneClickCopy\";\nimport React from \"react\";\nimport Exception from \"../../../model/Exception\";\n\ninterface StackTraceProps {\n  tell: Exception\n  depth: number\n\n}\n\nexport const StackTrace = ({tell, depth}: StackTraceProps) =>\n  <FullWidthWrappingFlexBox style={{paddingLeft: `${0.1 + depth * 2}rem`}}>\n    <Pre style={{color: \"red\"}}>\n      <p>{tell.errorType} {tell.message}</p>\n      <p>{\n        tell.stackTrace.map((it) =>\n          `at ${it.declaringClass}#${it.methodName}(${it.fileName}:${it.lineNumber})`).join(\"\\n\")\n      }</p></Pre>\n\n    <OneClickCopy\n      text={`${tell.errorType} ${tell.message} \\n` + tell.stackTrace.map((it) =>\n        `at ${it.declaringClass}#${it.methodName}(${it.fileName}:${it.lineNumber})`).join(\"\\n\")}/>\n\n  </FullWidthWrappingFlexBox>;","import FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport {Box} from \"@material-ui/core\";\nimport ResultImage from \"../../atoms/ResultImage\";\nimport DisplayRestQuery from \"./DisplayRestQuery\";\nimport React from \"react\";\nimport TestStep from \"../../../model/TestStep\";\nimport {StackTrace} from \"./StackTrace\";\n\ninterface TestStepDetailProps {\n  tell: TestStep\n  depth: number\n  expandOnDepths: number\n}\n\nexport const TestStepDetails = ({tell, depth, expandOnDepths}: TestStepDetailProps) => <FullWidthWrappingFlexBox\n  style={{paddingTop: \"0.2rem\"}}>\n  <Box style={{paddingLeft: `${0.1 + depth * 2}rem`}}>\n    <ResultImage result={tell.result}/> {tell.description}\n  </Box>\n  {tell.exception && !tell.children &&\n  <StackTrace tell={tell.exception} depth={depth}/>\n  }\n  {tell.restQuery &&\n  <FullWidthWrappingFlexBox>\n    <DisplayRestQuery expandOnDepths={expandOnDepths} tell={tell.restQuery}/>\n  </FullWidthWrappingFlexBox>\n  }\n</FullWidthWrappingFlexBox>;","import TestStep from \"../../../model/TestStep\";\nimport React from \"react\";\nimport ScreenShots from \"./Screenshots\"\nimport {ExpandableTestStep} from \"./ExpandableTestStep\";\nimport {TestStepDetails} from \"./TestStepDetails\";\n\nexport interface TestStepProps {\n  tell: TestStep\n  depth: number\n  expandOnDepths: number\n}\n\nconst TestStepRow = ({tell, depth, expandOnDepths}: TestStepProps) => {\n\n  const testStepDetails = <TestStepDetails tell={tell} depth={depth} expandOnDepths={expandOnDepths}/>;\n\n  return <>\n    <ScreenShots tell={tell} depth={depth}/>\n    {!tell.children && testStepDetails}\n    {tell.children &&\n    <ExpandableTestStep tellAll={tell.children} depth={depth} expandOnDepths={expandOnDepths}>\n      {testStepDetails}\n    </ExpandableTestStep>\n    }\n  </>\n};\n\nexport default TestStepRow","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport TestStep from \"../../../model/TestStep\";\nimport TestStepRow from \"./TestStepRow\";\n\ntype MyProps = {\n  tellAll?: Array<TestStep>,\n  depth: number\n  expandOnDepths: number\n}\n\nconst TestStepsRecursive = ({tellAll, depth, expandOnDepths}: MyProps) => {\n  if (!tellAll || tellAll.length === 0) return null;\n\n  return <Box paddingBottom={\"1rem\"} width={\"100%\"}>\n    {tellAll.map(step => <React.Fragment key={step.number}>\n      <TestStepRow tell={step} expandOnDepths={expandOnDepths} depth={depth}/>\n    </React.Fragment>)}\n  </Box>\n};\n\nexport default TestStepsRecursive","import FullWidthWrappingFlexBox from \"../molecules/FullWidthWrappingFlexBox\";\nimport * as React from \"react\";\n\nconst Divider = () => <FullWidthWrappingFlexBox>\n  <hr style={{width: \"20%\"}}/>\n</FullWidthWrappingFlexBox>;\n\n  export default Divider","import React from 'react';\n\nimport TestOutcome from \"../../../model/TestOutcome\";\nimport TestStepsRecursive from \"./TestStepsRecursive\";\nimport {Box, useTheme} from \"@material-ui/core\";\nimport Actors from \"../../molecules/Actors\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport {colorFor} from \"../../App\";\nimport ResultImage from \"../../atoms/ResultImage\";\nimport Emoji from \"../../atoms/Emoji\";\nimport * as _ from \"lodash\";\nimport {flatSteps} from \"../../../model/TestStep\";\nimport moment from \"moment\"\nimport prettyMilliseconds from \"pretty-ms\"\nimport RowWithResultAggregate from \"../../molecules/RowWithResultAggregate\";\nimport Divider from \"../../atoms/Devider\";\n\ntype MyProps = {\n  tell: TestOutcome\n}\n\nconst Outcome = ({tell}: MyProps) => {\n  const theme = useTheme();\n  const startTime = typeof tell.startTime === \"string\" && tell.startTime.toString().includes(\"[\") ? tell.startTime.split(\"[\")[0] : tell.startTime;\n  const steps = flatSteps(tell.testSteps);\n  const screenshotCount = _.sum(steps.filter(it => it.screenshots).map(it => it.screenshots.length));\n  const queryCount = steps.filter(it => it.restQuery).length;\n\n\n  return <>\n    <FullWidthWrappingFlexBox className={\"outcome\"} style={{\n      padding: \"0.5rem\",\n      margin: \"0.2rem\",\n      borderRadius: \"5px\",\n      backgroundColor: theme.palette.background.paper,\n      wordBreak: \"break-word\"\n    }}>\n      <FullWidthWrappingFlexBox>\n        <span><ResultImage result={tell.result}/> {tell.title}</span>\n      </FullWidthWrappingFlexBox>\n      <FullWidthWrappingFlexBox>\n        {tell.userStory.storyName}\n      </FullWidthWrappingFlexBox>\n      <FullWidthWrappingFlexBox>\n        {tell.userStory.path}\n      </FullWidthWrappingFlexBox>\n      <FullWidthWrappingFlexBox>\n        {tell.testSource}\n      </FullWidthWrappingFlexBox>\n      <FullWidthWrappingFlexBox>\n        {tell.tags.map(({type, displayName, name}) => (\n          <span style={{\n            color: theme.palette.text.primary,\n            background: colorFor(type, \"1F\"),\n            border: `1px solid ${colorFor(type)}`,\n            borderRadius: \"5px\",\n            marginRight: \"0.2rem\",\n            padding: \"0.1rem\"\n          }} key={`${type}${displayName}`}>{type}:{displayName ? displayName : name}\n        </span>))}\n      </FullWidthWrappingFlexBox>\n      <FullWidthWrappingFlexBox>\n        {\n          tell.actors && tell.actors.length > 0 && <>\n            <Actors tellAll={tell.actors}/>\n          </>\n        }\n      </FullWidthWrappingFlexBox>\n      <Divider/>\n      <FullWidthWrappingFlexBox>\n        <Box>started {moment(startTime).fromNow()}: {moment(startTime).toISOString()}</Box>\n        <Box style={{marginLeft: \"0.5rem\"}}>\n          took: {prettyMilliseconds(tell.duration)}\n        </Box>\n        {screenshotCount > 0 && <Box style={{marginLeft: \"0.5rem\"}}>\n        <Emoji label={\"screenshots\"}/> {screenshotCount}\n        </Box>\n        }\n        {queryCount > 0 && <Box style={{marginLeft: \"0.5rem\"}}>\n          <Emoji label={\"http\"}/> {queryCount}\n        </Box>\n        }\n\n      </FullWidthWrappingFlexBox>\n      <Divider/>\n      <RowWithResultAggregate tellAll={flatSteps(tell.testSteps).map(it => it.result)}>\n        <strong>steps</strong>\n      </RowWithResultAggregate>\n      <TestStepsRecursive expandOnDepths={1} depth={0} tellAll={tell.testSteps}/>\n    </FullWidthWrappingFlexBox>\n  </>\n};\n\n\nexport default Outcome;","const smallerThan = (headerBreak1: number) => `(max-width:${headerBreak1}px)`;\n\nconst MediaQuery = {\n  smallerThan\n};\n\nexport default MediaQuery","import {createMuiTheme} from \"@material-ui/core\";\n\nconst Themes = {\n  dark: createMuiTheme({\n   palette: {\n      primary: {\n        main: \"#8d86a3\",\n      },\n      secondary: {\n        main: \"#3f51c2\",\n      },\n      text: {\n        primary: \"#DDD\",\n      },\n      background: {\n        default: \"#000000\",\n        paper: \"#222222\"\n      }\n    },\n  }),\n  light: createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#a5819e\",\n      },\n      secondary: {\n        main: \"#4d65e5\",\n      },\n      text: {\n        primary: \"#303030\"\n      },\n      background: {\n        default: \"#EEEEEE\",\n        paper: \"#FFFFFF\"\n      }\n    },\n  }),\n  custom: {}\n};\n\nexport const BreakPoints = {\n  breakVievMode: 750,\n  breakSideMenue: 570,\n  breakOutcomes: 850\n}\n\nexport default Themes","import {Box, Button, FormControl, Select, useTheme} from \"@material-ui/core\";\nimport useGlobalState from \"../../../state\";\nimport React, {useEffect} from \"react\";\nimport FullWidthWrappingFlexBox from \"../../molecules/FullWidthWrappingFlexBox\";\nimport ResultImage from \"../../atoms/ResultImage\";\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport * as _ from \"lodash\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery/useMediaQuery\";\nimport MediaQuery from \"../../../MediaQuery\";\nimport {BreakPoints} from \"../../../themes\";\n\nconst SelectOutcome = () => {\n  const theme = useTheme();\n  const [outcomes] = useGlobalState('filteredOutcomes');\n  const [selected, setSelected] = useGlobalState('selectedOutcome');\n  const isSelected = selected.length > 0;\n  const minimal = useMediaQuery(MediaQuery.smallerThan(BreakPoints.breakOutcomes));\n\n  useEffect(() => {\n    if (outcomes.length === 1) {\n      setSelected(outcomes[0].id)\n    }\n  });\n\n  useEffect(() => {\n    if (!outcomes.find(it => it.id === selected) && outcomes.length > 1) {\n      setSelected(\"\")\n    }\n  }, [outcomes, setSelected, selected]);\n\n  const handleChange = (e: React.ChangeEvent<{ value: unknown }>) => {\n    if (typeof e.target.value === \"string\") {\n      setSelected(e.target.value)\n    }\n  };\n\n  return <>\n\n    {\n      isSelected && outcomes.length > 1 && minimal && <>\n        <FormControl size={\"small\"} color={\"secondary\"} variant={\"outlined\"}>\n          <Box display={\"flex\"} width={\"100%\"}>\n            <Box>\n              <Button\n                  style={{\n                    minWidth: 0,\n                    padding: \"0 0.2rem 0 0.7rem\", height: \"2.5rem\"\n                  }}\n                  onClick={() => setSelected(\"\")}\n                  variant={\"contained\"}\n                  color=\"secondary\"\n                  startIcon={<ViewListIcon/>}>{outcomes.length}</Button>\n            </Box>\n            <Box flex={\"1 0 0\"}>\n              <Select\n                  style={{marginLeft: \"0.2rem\", background: theme.palette.secondary.main}}\n                  native\n                  value={selected}\n                  onChange={handleChange}>\n                {\n                  outcomes.map(it => <option key={it.id} value={it.id}>\n                    {it.result.toLowerCase()}: {it.userStory.path} {it.userStory.storyName} {it.title}\n                  </option>)\n                }\n              </Select>\n            </Box>\n          </Box>\n        </FormControl>\n      </>}\n    {(!isSelected || !minimal) && <FullWidthWrappingFlexBox>\n      {\n        _.sortBy(\n          _.sortBy(\n            outcomes,\n            (it => it.userStory.storyName)\n          ),\n          (it => it.userStory.path)\n        ).map(it => <React.Fragment key={it.id}>\n          <FullWidthWrappingFlexBox>\n            <Button className={\"selectOutcome\"} fullWidth variant={\"outlined\"} color={it.id === selected ? \"primary\" : \"secondary\"}\n                    style={{\n                      textTransform: \"none\",\n                      justifyContent: \"start\",\n                      textAlign: \"left\",\n                      color: theme.palette.text.primary,\n                      margin: \"0.2rem\",\n                      background: it.id === selected ? theme.palette.background.paper : \"none\"\n                    }}\n                    onClick={() => setSelected(it.id)}\n            >\n              <Box display={\"flex\"} width={\"100%\"}>\n                <Box style={{marginRight: \"0.2rem\"}}>\n                  <ResultImage result={it.result}/>\n                </Box>\n                <Box style={{wordBreak: \"break-all\"}}>\n                  {it.userStory.path}\n                  <br/>\n                  {it.userStory.storyName}\n                  <br/>\n                  {it.title}\n                </Box>\n              </Box>\n            </Button>\n          </FullWidthWrappingFlexBox>\n        </React.Fragment>)\n      }\n    </FullWidthWrappingFlexBox>}\n\n  </>\n\n\n};\nexport default SelectOutcome","import React from \"react\";\nimport useGlobalState from '../../state';\nimport FullWidthWrappingFlexBox from \"../molecules/FullWidthWrappingFlexBox\";\nimport Outcome from \"./outcome/Outcome\";\nimport SelectOutcome from \"./outcome/SelectOutcome\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery/useMediaQuery\";\nimport MediaQuery from \"../../MediaQuery\";\nimport {BreakPoints} from \"../../themes\";\nimport {Box} from \"@material-ui/core\";\n\n\nconst ByOutcome = () => {\n  const [outcomes] = useGlobalState('filteredOutcomes');\n  const [selected] = useGlobalState('selectedOutcome');\n  const selectedOutcome = outcomes.find(it => it.id === selected);\n  const minimal = useMediaQuery(MediaQuery.smallerThan(BreakPoints.breakOutcomes));\n\n  if (outcomes.length === 0) return null;\n\n  return <>\n    <FullWidthWrappingFlexBox className={\"outcomes\"}>\n      {minimal && <>\n        <SelectOutcome/>\n        {selectedOutcome && <Outcome tell={selectedOutcome}/>}\n      </>}\n      {!minimal && <>\n        <Box flex={\"1 0 35%\"}>\n          <SelectOutcome/>\n        </Box>\n        <Box flex={\"1 0 65%\"}>\n          {selectedOutcome && <Outcome tell={selectedOutcome}/>}\n          {!selectedOutcome && <Outcome tell={outcomes[0]}/>}\n\n        </Box>\n      </>}\n    </FullWidthWrappingFlexBox>\n  </>\n};\n\nexport default ByOutcome","import * as React from \"react\";\nimport useGlobalState from \"../../state\"\nimport ExpandCollapse from \"../atoms/ExpandCollapse\";\nimport {Box} from \"@material-ui/core\";\n\nconst ExpandCollapseAll = () => {\n  const [depths, setDepths] = useGlobalState(\"expansionDepth\");\n\n  function expandAll() {\n    setDepths(Math.max(depths + 1, 1));\n  }\n\n  function collapseAll() {\n    setDepths(depths - 1)\n  }\n  return <>\n    <Box className={\"expandCollapseAll\"} style={{textAlign: \"right\", paddingRight: \"0.2rem\"}}>\n      <ExpandCollapse isExpanded={true} onClick={collapseAll}/>\n      <ExpandCollapse isExpanded={false} onClick={expandAll}/>\n    </Box>\n  </>\n};\n\nexport default ExpandCollapseAll","import * as React from \"react\";\nimport {FunctionComponent} from \"react\";\nimport {Button} from \"@material-ui/core\";\n\ninterface MyProps {\n  disabled: boolean,\n  onClick: Function\n}\n\nconst ClearButton: FunctionComponent<MyProps> = ({disabled, onClick}) => {\n  const style = {\n    marginLeft: \"auto\",\n    minWidth: \"0\",\n  };\n    return <Button disabled={disabled} variant={\"outlined\"} color={\"secondary\"} style={style} onClick={() => onClick()}>X</Button>\n};\n\nexport default ClearButton","import React from \"react\";\nimport {Button} from \"@material-ui/core\";\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport useGlobalState from \"../../state\";\nimport ClearButton from \"../molecules/ClearButton\";\nimport Filter from \"../../model/Filter\";\nimport * as _ from \"lodash\";\n\nexport const ToggleSideMenu = () => {\n\n  const [showSideMenu, setShowSideMenu] = useGlobalState(\"showSideMenu\");\n  const [filter, setFilter] = useGlobalState(\"filter\");\n  const activeFilters = _.keys(filter).filter(it => {\n    return !_.isEqual(_.get(new Filter(), it), _.get(filter, it));\n  });\n  const [, setDepths] = useGlobalState(\"expansionDepth\");\n\n\n  const buttonStyle = {\n    minWidth: 0,\n  };\n\n\n  return <>\n    <Button className={\"ToggleSideMenu\"}\n      style={buttonStyle}\n      onClick={() => setShowSideMenu(!showSideMenu)}\n      variant={!showSideMenu ? \"contained\" : \"outlined\"}\n      color=\"secondary\"\n      startIcon={<FilterListIcon />}>{activeFilters.length >= 1 && activeFilters.length }</Button>\n    <ClearButton disabled={activeFilters.length === 0} onClick={() => {\n      setDepths(0);\n    return setFilter(new Filter());\n  }}/>\n  </>\n};","import React from \"react\";\nimport {Box, Button, FormControl, Select, useTheme} from \"@material-ui/core\";\nimport useGlobalState from \"../../state\";\nimport Emoji from \"../atoms/Emoji\";\nimport FullWidthWrappingFlexBox from \"../molecules/FullWidthWrappingFlexBox\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery/useMediaQuery\";\nimport MediaQuery from \"../../MediaQuery\";\nimport View from \"../../model/View\";\nimport {BreakPoints} from \"../../themes\";\n\ninterface TabNavProps {\n  switchTo: Function\n}\n\ninterface SwitchViewButtonProps {\n  view: string\n  switchTo: Function\n}\n\nconst SwitchToViewButton = ({view, switchTo}: SwitchViewButtonProps) => {\n  const [selectedView] = useGlobalState(\"view\");\n\n  return <>\n    <Box onClick={() => switchTo(view)}>\n      <Button disableElevation variant={selectedView === view ? \"contained\" : \"outlined\"} color={\"secondary\"}\n              style={{borderBottomLeftRadius: 0, borderBottomRightRadius: 0, margin: \"0 0.2rem\"}}>\n        {view}&nbsp;<Emoji label={view}/>\n      </Button>\n    </Box>\n  </>;\n};\n\nconst TabularNavigation = ({switchTo}: TabNavProps) => {\n  return <FullWidthWrappingFlexBox>\n    {\n      [View.STATS, View.STORY, View.OUTCOMES, View.SCREENSHOTS].map(it =>\n        <React.Fragment key={it}>\n          <SwitchToViewButton view={it} switchTo={switchTo}/>\n        </React.Fragment>\n      )\n    }\n    </FullWidthWrappingFlexBox>\n};\n\nconst SelectNavigation = ({switchTo}: TabNavProps) => {\n  const [view] = useGlobalState(\"view\");\n  const theme = useTheme();\n\n  return <>\n    <FormControl color={\"secondary\"} variant={\"outlined\"} size={\"small\"}>\n      <Select\n        style={{background: theme.palette.secondary.main, width: \"100%\"}}\n        native\n        value={view}\n        onChange={(e) => switchTo(e.target.value)}>\n        {\n          [View.STATS, View.STORY, View.OUTCOMES, View.SCREENSHOTS].map(it =>\n            <option key={it} value={it} style={{textTransform: \"capitalize\"}}>\n              {it}\n            </option>\n          )\n        }\n      </Select>\n    </FormControl>\n  </>;\n};\n\nconst SwitchViewMode = () => {\n  const [, setView] = useGlobalState(\"view\");\n  const [, setDepth] = useGlobalState('expansionDepth');\n\n  const minimal = useMediaQuery(MediaQuery.smallerThan(BreakPoints.breakVievMode));\n\n  const switchTo = (view: string) => {\n    setDepth(0);\n    setView(view)\n  };\n\n  return <>\n    {minimal && <SelectNavigation switchTo={switchTo}/>}\n    {!minimal && <TabularNavigation switchTo={switchTo}/>}\n  </>\n};\n\nexport default SwitchViewMode","import * as React from \"react\";\nimport {Button, useTheme} from \"@material-ui/core\";\nimport {FunctionComponent} from \"react\";\n\ninterface MyProps {\n  checked: boolean,\n  onClick: Function\n  fullWidth?: boolean\n}\n\nconst CheckboxButton: FunctionComponent<MyProps> = ({checked, onClick, children, fullWidth}) => {\n  const theme = useTheme();\n  return <Button fullWidth={fullWidth} style={{wordBreak: \"break-word\", margin: \"0.2rem\", color: theme.palette.text.primary, background: checked ? theme.palette.background.paper : theme.palette.background.default}} variant=\"outlined\"\n                 color={\"primary\"} onClick={() => onClick()}>\n    {\n      children\n    }\n  </Button>\n};\n\nexport default CheckboxButton","import useGlobalState from \"../../state\";\nimport Filter from \"../../model/Filter\";\nimport _ from \"lodash\";\nimport React from \"react\";\nimport CheckboxButton from \"../atoms/CheckboxButton\";\nimport ClearButton from \"../molecules/ClearButton\";\nimport ResultImage from \"../atoms/ResultImage\";\n\n\nconst FilterResult = () => {\n  const [filter, setFilter] = useGlobalState('filter');\n  const [, setDepths] = useGlobalState('expansionDepth');\n\n  const outcomes = window.outcomes;\n  const [filtered] = useGlobalState(\"filteredOutcomes\");\n\n  let results: Array<string> = _.uniq(outcomes.map((it) => it.result));\n  let resultCounts = _.countBy(outcomes,(it) => it.result);\n  let filteredResultCounts = _.countBy(filtered,(it) => it.result);\n\n  function toggle(result: string, resultsLenght: number) {\n    const newFilter = Object.assign(new Filter(), filter);\n\n    if (newFilter.results.length === 0) {\n      newFilter.results = results\n    }\n\n    let index = newFilter.results.indexOf(result);\n    if (index < 0) {\n      newFilter.results.push(result)\n    } else {\n      newFilter.results.splice(index, 1)\n    }\n    if (resultsLenght === newFilter.results.length) {\n      newFilter.results = new Filter().results\n    }\n    setDepths(0);\n    setFilter(newFilter)\n  }\n\n  const canBeCleared = filter.results.length > 0 && filter.results.length !== results.length;\n\n  const clear = () => {\n    setDepths(0);\n    const newFilter = Object.assign(new Filter(), filter);\n    newFilter.results = [];\n    setFilter(newFilter)\n  };\n\n  return <>\n\n    <ClearButton disabled={!canBeCleared} onClick={clear}/>\n    {results.map(it => {\n      return <React.Fragment key={it}>\n        <CheckboxButton fullWidth={true} checked={filter.results.length === 0 || filter.results.includes(it)} onClick={() => toggle(it, results.length)}>\n        <span>{it}&nbsp;<ResultImage result={it}/>{resultCounts[it] > 0 && <span style={{fontSize: \"0.8rem\"}}> {filteredResultCounts[it] || \"-\"}/{resultCounts[it]}</span>}</span>\n      </CheckboxButton></React.Fragment>\n\n    })}\n  </>\n};\n\nexport default FilterResult","import useGlobalState from \"../../state\";\nimport React, {useEffect, useRef, useState} from \"react\";\nimport Filter from \"../../model/Filter\";\nimport _ from \"lodash\";\nimport ClearButton from \"../molecules/ClearButton\";\nimport {Box, useTheme} from \"@material-ui/core\";\nimport FullWidthWrappingFlexBox from \"../molecules/FullWidthWrappingFlexBox\";\n\nconst FilterKeywords = () => {\n  const theme = useTheme();\n  const [filter, setFilter] = useGlobalState('filter');\n  const [, setDepths] = useGlobalState('expansionDepth');\n  const [localValue, setLocalValue] = useState(filter.keyword);\n\n  const sync = (filter: Filter, newValue: string) => {\n    const newFilter = Object.assign(new Filter(), filter);\n    newFilter.keyword = newValue;\n    setFilter(newFilter);\n    setDepths(0)\n  };\n\n  const debouncedSync = useRef(_.debounce(sync, 300)).current;\n\n  useEffect(() => {\n    setLocalValue(filter.keyword)\n  }, [filter.keyword]);\n\n  useEffect(() => {\n    if (filter.keyword === localValue) return;\n    debouncedSync(filter, localValue);\n    return () => debouncedSync.cancel()\n  }, [debouncedSync, filter, localValue]);\n\n  return <>\n    <FullWidthWrappingFlexBox>\n      <Box margin={\"0 0.2rem\"} flex={\"1 1 150px\"}>\n        <input style={{\n          height: \"2rem\",\n          width: \"100%\",\n          padding: \"0.5rem\",\n          color: theme.palette.text.primary,\n          background: theme.palette.background.default\n        }}\n               // TODO tag, outline, narrative\n               type={\"text\"} placeholder={\"name, story name, title...\"} value={localValue}\n               onChange={(e) => setLocalValue(e.target.value)}/>\n      </Box>\n      <Box>\n        <ClearButton disabled={localValue === \"\"} onClick={() => setLocalValue(\"\")}/>\n      </Box>\n    </FullWidthWrappingFlexBox>\n  </>\n};\n\nexport default FilterKeywords","import useGlobalState from \"../../state\";\nimport React from \"react\";\nimport Filter from \"../../model/Filter\";\nimport {Button} from \"@material-ui/core\";\nimport ClearButton from \"../molecules/ClearButton\";\n\nconst FilterTestOutcome = () => {\n  const [filter, setFilter] = useGlobalState('filter');\n  const [, setDepths] = useGlobalState('expansionDepth');\n  if (filter.focusOutcome.length <= 0) {\n    return null\n  }\n\n  const clear = () => {\n    setDepths(0);\n    const newFilter = Object.assign(new Filter(), filter);\n    newFilter.focusOutcome = \"\";\n    setFilter(newFilter)\n  };\n\n  return <>\n    <ClearButton disabled={false} onClick={clear}/>\n    <Button variant={\"contained\"} color={\"primary\"}>Outcome: {filter.focusOutcome.split(\".\").join(\" \")}</Button>\n  </>\n};\n\nexport default FilterTestOutcome","import {Button} from \"@material-ui/core\";\nimport Result from \"../../model/Result\";\nimport * as React from \"react\";\nimport Filter from \"../../model/Filter\";\nimport useGlobalState from \"../../state\";\nimport View from \"../../model/View\";\n\nconst QuickLinks = () => {\n\n  const [, setView] = useGlobalState(\"view\");\n  const [, setFilter] = useGlobalState(\"filter\");\n  const [, setDepths] = useGlobalState(\"expansionDepth\");\n\n\n  const showPendingStories = () => {\n    const newFilter = new Filter();\n    newFilter.results = [Result.PENDING];\n    setFilter(newFilter);\n    setDepths(1);\n    setView(View.STORY)\n  };\n\n  const showViewOutcomeErrors = () => {\n    const newFilter = new Filter();\n    newFilter.results = [Result.FAILURE, Result.ERROR, Result.COMPROMISED];\n    setFilter(newFilter);\n    setDepths(10);\n    setView(View.OUTCOMES);\n  };\n\n\n  return <>\n    <Button className={\"traceErrors\"} style={{marginBottom: \"0.5rem\"}} fullWidth={true} color={\"secondary\"} variant={\"outlined\"}\n            onClick={showViewOutcomeErrors}>\n      trace errors\n    </Button>\n\n    <Button fullWidth={true} color={\"secondary\"} variant={\"outlined\"} onClick={showPendingStories}>\n      pending stories\n    </Button></>;\n};\n\nexport default QuickLinks","import React from \"react\";\nimport _ from \"lodash\";\nimport FullWidthWrappingFlexBox from \"../molecules/FullWidthWrappingFlexBox\";\nimport {Box} from \"@material-ui/core\";\nimport Tag from \"../../model/Tag\";\nimport ClearButton from \"../molecules/ClearButton\";\nimport useGlobalState from \"../../state\";\nimport Filter from \"../../model/Filter\";\nimport Emoji from \"../atoms/Emoji\";\nimport CheckboxButton from \"../atoms/CheckboxButton\";\n\n\nconst FilterTags = () => {\n\n  const [filter, setFilter] = useGlobalState(\"filter\");\n  const [, setDepths] = useGlobalState(\"expansionDepth\");\n  const [tagsByType] = useGlobalState(\"tagsByType\");\n  const outcomes = window.outcomes;\n  const [filtered] = useGlobalState(\"filteredOutcomes\");\n\n\n  const types = filter.focusType.length > 0 ? [filter.focusType] : _.keys(tagsByType);\n  const canBeCleared = filter.focusType !== \"\" || filter.focusTag !== \"\";\n  const tags = outcomes.map(it => it.tags).flat();\n  const typeCounts = _.countBy(tags, it => it.type);\n  const tagCounts = _.countBy(tags, it => it.type + it.name);\n\n  const filteredTags = filtered.map(it => it.tags).flat();\n  const filteredTypeCounts = _.countBy(filteredTags, it => it.type);\n  const filteredTagCounts = _.countBy(filtered.map(it => it.tags).flat(), it => it.type + it.name);\n\n  const clear = () => {\n    setDepths(0);\n    const newFilter = Object.assign(new Filter(), filter);\n    newFilter.focusTag = \"\";\n    newFilter.focusType = \"\";\n    setFilter(newFilter)\n  };\n\n  function focusType(type: string) {\n    setDepths(0);\n    const newFilter = Object.assign(new Filter(), filter);\n    newFilter.focusTag = \"\";\n    newFilter.focusType = type;\n    setFilter(newFilter)\n  }\n\n  function focusTag(tag: Tag) {\n    setDepths(0);\n    const newFilter = Object.assign(new Filter(), filter);\n    newFilter.focusTag = tag.name;\n    newFilter.focusType = tag.type;\n    setFilter(newFilter)\n  }\n\n\n  return <>\n    <ClearButton disabled={!canBeCleared} onClick={clear}/>\n    <FullWidthWrappingFlexBox>\n      {_.sortBy(types, it => filteredTypeCounts[it] || 0).reverse().map(type => <React.Fragment key={type}>\n        <CheckboxButton fullWidth checked={filter.focusType === type} onClick={() => focusType(type)}>\n          <span><Emoji label={type}/>&nbsp;{type}{typeCounts[type] > 0 && <span style={{fontSize: \"0.8rem\"}}> {filteredTypeCounts[type] || \"-\"}/{typeCounts[type]}</span>}</span>\n        </CheckboxButton>\n\n        <FullWidthWrappingFlexBox\n          style={{overflowY: \"auto\", maxHeight: filter.focusType === type ? \"none\" : \"7rem\", marginBottom: \"1rem\"}}>\n          {_.sortBy(tagsByType[type], it => filteredTagCounts[type + it.name] || 0).reverse().map(it => <React.Fragment key={it.name}>\n              <Box flex={\"1 1 90%\"} marginLeft={\"1rem\"} marginRight={\"1rem\"}>\n                <CheckboxButton fullWidth checked={filter.focusTag === it.name} onClick={() => focusTag(it)}>\n                  <span>{it.displayName ? it.displayName : it.name}{tagCounts[type + it.name] > 0 && <span style={{fontSize: \"0.8rem\"}}> {filteredTagCounts[type + it.name] || \"-\"}/{tagCounts[type + it.name]}</span>}</span>\n                </CheckboxButton>\n              </Box>\n            </React.Fragment>\n          )}\n        </FullWidthWrappingFlexBox>\n      </React.Fragment>)}\n    </FullWidthWrappingFlexBox>\n  </>\n};\n\nexport default FilterTags","import * as React from \"react\";\nimport FilterResult from \"./FilterResult\";\nimport FilterKeywords from \"./FilterKeywords\";\nimport useGlobalState from \"../../state\";\nimport FilterTestOutcome from \"./FilterTestOutcome\";\nimport FullWidthWrappingFlexBox from \"../molecules/FullWidthWrappingFlexBox\";\nimport QuickLinks from \"./QuickLinks\";\nimport FilterTags from \"./FilterTags\";\nimport Divider from \"../atoms/Devider\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery/useMediaQuery\";\nimport MediaQuery from \"../../MediaQuery\";\nimport {BreakPoints} from \"../../themes\";\nimport Expandable from \"../organisms/Expandable\";\n\nconst SideMenu = () => {\n  const [filter] = useGlobalState(\"filter\");\n\n  const minimal = useMediaQuery(MediaQuery.smallerThan(BreakPoints.breakSideMenue));\n\n  return <FullWidthWrappingFlexBox>\n\n    <span style={{textTransform: \"capitalize\"}}>search</span>\n    <FilterKeywords/>\n    <Divider/>\n\n    {minimal && <>\n      <Expandable depths={0} whatsHidden={<FilterResult/>}>\n        <span style={{textTransform: \"capitalize\"}}>result</span>\n      </Expandable>\n    </>}\n    {!minimal && <>\n      <span style={{textTransform: \"capitalize\"}}>result</span>\n      <FilterResult/>\n    </>}\n    <Divider/>\n\n    {filter.focusOutcome.length > 0 && <>\n      <span style={{textTransform: \"capitalize\"}}>outcome</span>\n      <FilterTestOutcome/>\n      <Divider/>\n    </>\n    }\n\n\n    {minimal && <>\n      <Expandable depths={0} whatsHidden={<QuickLinks/>}>\n        <span style={{textTransform: \"capitalize\"}}>bookmarks</span>\n      </Expandable>\n    </>}\n    {!minimal && <>\n      <span style={{textTransform: \"capitalize\"}}>bookmarks</span>\n      <QuickLinks/>\n    </>}\n    <Divider/>\n\n    {minimal && <>\n      <Expandable depths={0} whatsHidden={<FilterTags/>}>\n        <span style={{textTransform: \"capitalize\"}}>tags</span>\n      </Expandable>\n    </>}\n    {!minimal && <>\n      <span style={{textTransform: \"capitalize\"}}>tags</span>\n      <FilterTags/>\n    </>}\n    <Divider/>\n\n  </FullWidthWrappingFlexBox>\n};\n\nexport default SideMenu","import useGlobalState from \"../state\";\nimport {useLocation} from \"react-router\";\nimport qs, {ParsedQuery, stringify} from \"query-string\";\nimport {useEffect} from \"react\";\nimport * as _ from \"lodash\";\nimport {ArrayParam, decodeQueryParams, encodeQueryParams, NumberParam, StringParam} from 'serialize-query-params';\nimport Filter from \"../model/Filter\";\nimport Themes from \"../themes\";\nimport {createMuiTheme} from \"@material-ui/core\";\n\n\nexport interface MyQuery {\n  outcomeId?: string\n  depth?: number\n  view?: string\n  results?: Array<string>\n  text?: string\n  type?: string\n  tag?: string\n  theme?: string\n}\n\nconst paramConfigMap = {\n  outcomeId: StringParam,\n  depth: NumberParam,\n  view: StringParam,\n  results: ArrayParam,\n  text: StringParam,\n  type: StringParam,\n  tag: StringParam,\n  theme: StringParam\n};\n\n// encode each parameter according to the configuration\nconst decodedQuery = (query: ParsedQuery<string | number>) => decodeQueryParams(\n  paramConfigMap, query\n);\n\nexport const queryString = (props: MyQuery) => `?${encodedQuery(props)}`;\n\nconst encodedQuery = (query: MyQuery) => {\n  return stringify(encodeQueryParams(paramConfigMap, query));\n};\n\nconst LocalStateFromQueryParameters = () => {\n  const [init, setInit] = useGlobalState(\"hasParsedQuery\");\n  const [, setFilter] = useGlobalState('filter');\n  const [, setDepth] = useGlobalState('expansionDepth');\n  const [, setView] = useGlobalState('view');\n  const [, setTheme] = useGlobalState('theme');\n\n  const location = useLocation();\n  const query = decodedQuery(qs.parse(location.search, {parseNumbers: true}));\n\n  useEffect(() => {\n    if (init) return;\n    // query values override global state\n    if (_.keys(query).length === 0) {\n      setInit(true);\n      return;\n    }\n\n    const {outcomeId, depth, view, results, text, tag, type, theme} = query;\n\n    function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\n      return value !== null && value !== undefined;\n    }\n\n    const filter = new Filter();\n    filter.focusOutcome = outcomeId ? outcomeId : \"\";\n    filter.results = results && results.length > 0 ? results.filter(notEmpty) : [];\n    filter.keyword = text ? text : \"\";\n    filter.focusType = type ? type: \"\";\n    filter.focusTag = tag ? tag: \"\";\n    setFilter(filter);\n\n    if (depth) setDepth(depth);\n\n    if (view) setView(view);\n\n    if (theme) {\n      if (_.keys(Themes).includes(theme)) {\n        setTheme(theme)\n      } else if (theme.includes(\"_\")) {\n        const split = theme.split(\"_\");\n        Themes.custom = createMuiTheme({\n          palette: {\n            primary: {\n              main: split[0],\n            },\n            secondary: {\n              main: split[1],\n            },\n            text: {\n              primary: split[2],\n            },\n            background: {\n              default: split[3],\n              paper: split[4]\n            }\n          },\n        });\n        setTheme(\"custom\")\n      }\n\n    }\n\n    setInit(true)\n\n\n  }, [init, query, setDepth, setFilter, setInit, setTheme, setView]);\n\n  return null;\n};\n\nexport default LocalStateFromQueryParameters","import React, {FunctionComponent} from 'react';\nimport useGlobalState from '../state';\nimport ByStory from \"./explore/ByStory\";\nimport ByScreenshots from \"./explore/ByScreenshots\";\nimport Stats from \"./explore/stats/Stats\";\nimport View from \"../model/View\";\nimport ByOutcome from \"./explore/ByOutcome\";\nimport ExpandCollapseAll from \"./explore/ExpandCollapseAll\";\nimport {ToggleSideMenu} from \"./controls/ToggleSideMenu\";\nimport FullWidthWrappingFlexBox from \"./molecules/FullWidthWrappingFlexBox\";\nimport {Box, Fab, useTheme} from \"@material-ui/core\";\nimport SwitchViewMode from \"./controls/SwitchViewMode\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery/useMediaQuery\";\nimport MediaQuery from \"../MediaQuery\";\nimport {BreakPoints} from '../themes';\nimport SideMenu from \"./controls/SideMenu\";\nimport ShareIcon from '@material-ui/icons/Share';\nimport {queryString} from \"./LocalStateFromQueryParameters\";\n\nconst WithSideMenu: FunctionComponent = ({children}) => {\n  const [showSideMenu] = useGlobalState(\"showSideMenu\");\n  const minimalMenu = useMediaQuery(MediaQuery.smallerThan(BreakPoints.breakSideMenue));\n  const theme = useTheme();\n\n\n  return <>\n    {showSideMenu && <Box style={{\n    flex: minimalMenu ? \"0 0 100%\" : \"0 1 20rem\",\n    background: minimalMenu ? \"none\" : theme.palette.background.default + \"EE\"\n\n  }}>\n    <SideMenu/>\n  </Box>}\n  <Box flex={\"1 1 14rem\"}>\n    {children}\n  </Box>\n  </>\n};\n\nconst ExploreData = () => {\n  const [view] = useGlobalState(\"view\");\n  const [outcomes] = useGlobalState(\"filteredOutcomes\");\n  const [filter] = useGlobalState(\"filter\");\n  const [depth] = useGlobalState(\"expansionDepth\");\n  const [themeKey] = useGlobalState(\"theme\");\n  const theme = useTheme();\n\n  const minimalSwitchView = useMediaQuery(MediaQuery.smallerThan(BreakPoints.breakVievMode));\n\n\n  const displayView = (view: string) => {\n    const filterSwitchViewAndExpand = <FullWidthWrappingFlexBox\n      style={{justifyContent: \"space-between\", alignItems: \"center\"}}>\n      <Box>\n        <ToggleSideMenu/>\n      </Box>\n      <Box flex={minimalSwitchView ? \"none\" : \"1 0 20rem\"}>\n        <SwitchViewMode/>\n      </Box>\n      <Box>\n        <ExpandCollapseAll/>\n      </Box>\n    </FullWidthWrappingFlexBox>;\n\n    const filterAndSwitchView = <FullWidthWrappingFlexBox\n      style={{justifyContent: \"space-between\", alignItems: \"center\"}}>\n      <Box>\n        <ToggleSideMenu/>\n      </Box>\n      <Box flex={minimalSwitchView ? \"none\" : \"1 0 20rem\"}>\n        <SwitchViewMode/>\n      </Box>\n    </FullWidthWrappingFlexBox>;\n\n\n    switch (view) {\n      case View.STORY:\n        return <>\n          {filterSwitchViewAndExpand}\n\n          <WithSideMenu>\n            <ByStory/>\n          </WithSideMenu>\n        </>;\n      case View.SCREENSHOTS:\n        return <>\n          {filterAndSwitchView}\n\n          <WithSideMenu>\n            <ByScreenshots/>\n          </WithSideMenu>\n        </>;\n      case View.STATS:\n        return <>\n          {filterAndSwitchView}\n          <WithSideMenu>\n            <Stats/>\n          </WithSideMenu>\n        </>;\n      case View.OUTCOMES:\n        return <>\n          {filterSwitchViewAndExpand}\n          <WithSideMenu>\n            <ByOutcome/>\n          </WithSideMenu>\n        </>\n    }\n    return <Stats/>\n  };\n\n  const encodedTheme = themeKey !== \"custom\" ? themeKey :\n    [theme.palette.primary.main, theme.palette.secondary.main, theme.palette.text.primary, theme.palette.background.default, theme.palette.background.paper].join(\"_\");\n\n  // FIXME current view should contain selected outcome in outcome view\n  return <>\n    {outcomes.length === 0 && <p>No Results, clear all filters?</p>}\n    {displayView(view)}\n    <FullWidthWrappingFlexBox style={{height: \"4rem\"}}>\n      <Fab variant=\"extended\" href={queryString({\n        theme: encodedTheme,\n        view,\n        results: filter.results,\n        text: filter.keyword,\n        outcomeId: filter.focusOutcome,\n        type: filter.focusType,\n        tag: filter.focusTag,\n        depth\n      })}\n      style={{\n       position: \"fixed\",\n       bottom: \"0.5rem\",\n       right: \"0.5rem\"\n      }}\n      >\n        Link to current view\n        <ShareIcon/>\n      </Fab>\n    </FullWidthWrappingFlexBox>\n  </>\n};\n\nexport default ExploreData\n","import useGlobalState from \"../state\";\nimport {useEffect} from \"react\";\n\nconst ApplyFilter = () => {\n  const [,setInit] = useGlobalState(\"hasAppliedFilter\");\n  const outcomes = window.outcomes;\n  const [filter] = useGlobalState('filter');\n  const [, setFilteredOutcomes] = useGlobalState(\"filteredOutcomes\");\n\n  useEffect(() => {\n    setFilteredOutcomes(\n      outcomes\n        .filter(it => filter.focusOutcome.length > 0 ? it.id === filter.focusOutcome : true)\n        .filter(it => filter.focusTag.length > 0 ? it.tags.map(tag => tag.name).includes(filter.focusTag) : true)\n        .filter(it => filter.focusType.length > 0 ? it.tags.map(tag => tag.type).includes(filter.focusType) : true)\n        .filter(it => filter.keyword.length > 0 ? [it.name, it.userStory.storyName, it.title].join(\"\\n\").toLowerCase().includes(filter.keyword.toLowerCase()) : true)\n        .filter(it => filter.results.length > 0 ? filter.results.includes(it.result): true)\n    );\n\n    setInit(true)\n  }, [filter, outcomes, setFilteredOutcomes, setInit]);\n\n  return null;\n};\n\nexport default ApplyFilter","import {Box, Button, ClickAwayListener, useTheme} from \"@material-ui/core\";\nimport FullWidthWrappingFlexBox from \"./molecules/FullWidthWrappingFlexBox\";\nimport Emoji from \"./atoms/Emoji\";\nimport ResultImage from \"./atoms/ResultImage\";\nimport Result from \"../model/Result\";\nimport EnableTracking from \"./EnableTracking\";\nimport React from \"react\";\nimport useGlobalState from \"../state\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport MediaQuery from \"../MediaQuery\";\n\n\nconst Title = () => {\n  const theme = useTheme();\n\n  return <Button style={{color: theme.palette.text.primary}} variant={\"text\"} href={\"/\"}>\n    <h1>Serenity Report Navigator</h1>\n  </Button>;\n};\n\nconst Info = () => {\n  const [info, setInfo] = useGlobalState(\"showReadme\");\n\n  return <ClickAwayListener onClickAway={() => setInfo(false)}>\n    <div>\n      {!info && <Button variant={\"outlined\"} type=\"button\" color={\"primary\"}\n                        style={{minWidth: \"0\"}}\n                        onClick={() => setInfo(!info)}>\n        <strong>?</strong>\n      </Button>}\n    </div>\n  </ClickAwayListener>;\n};\n\nconst ToggleTheme = () => {\n  const [theme, setTheme] = useGlobalState(\"theme\");\n  const isDark = theme === \"dark\";\n\n  return <>\n    <Button variant={\"outlined\"} type=\"button\" color={\"primary\"}\n            style={{minWidth: \"0\"}}\n            onClick={() => isDark ? setTheme(\"light\") : setTheme(\"dark\")}>\n      {isDark ? <Emoji label={\"night\"}/> : <Emoji label={\"day\"}/>}\n    </Button>\n  </>;\n};\n\nconst Sponsor = () =>\n  <Button variant={\"outlined\"} color={\"primary\"}\n          href={\"https://github.com/sponsors/globalworming\"} target={\"_blank\"}\n          rel={\"noopener noreferrer\"}>\n    <Emoji label={\"heart\"}/>&nbsp;Sponsor\n  </Button>;\n\nconst Stars = () =>\n  <a style={{height: \"2.2rem\"}}\n     href=\"https://github.com/globalworming/serenity-report-navigator\">\n    <img\n      style={{height: \"2.2rem\"}}\n      src=\"https://x.h7e.eu/badges/xz/q/github/starGazers/gh-stargazers/globalworming/serenity-report-navigator\"\n      alt=\"GitHub Stars\"/>\n  </a>;\n\nconst Header = () => {\n  const breakpoint = 650;\n  const minimal = useMediaQuery(MediaQuery.smallerThan(breakpoint));\n  const [info] = useGlobalState(\"showReadme\");\n  const spanStyle = {padding: \"0.2rem\"};\n\n  const Readme = <>\n    <FullWidthWrappingFlexBox>\n        <span style={spanStyle}>\n      <Emoji label={\"stories\"}/>concise living documentation</span>\n      <span style={spanStyle}>\n      <ResultImage result={Result.FAILURE}/> in-depth steps and traces\n    </span>\n      <span style={spanStyle}>\n      <Emoji label={\"big screen\"}/> wallboard friendly\n    </span>\n      <span style={spanStyle}>\n      <Emoji label={\"mobile\"}/> mobile friendly\n    </span>\n      <span style={spanStyle}>\n      <Emoji label={\"one hundred\"}/> customizable theme and view options\n    </span>\n    </FullWidthWrappingFlexBox>\n  </>;\n  return <>\n    {minimal && <>\n      <FullWidthWrappingFlexBox>\n        <Title/>\n        <ToggleTheme/>\n      </FullWidthWrappingFlexBox>\n\n      <Box display={\"flex\"} flexWrap={\"wrap\"} marginLeft={\"auto\"} flex={\"0 0 20rem\"}\n           style={{justifyContent: \"space-between\"}}\n           flexDirection=\"row-reverse\"\n      >\n        <Sponsor/>\n        <Stars/>\n        <Info/>\n      </Box>\n      {info &&\n      Readme\n      }\n    </>}\n\n    {!minimal && <>\n      <FullWidthWrappingFlexBox style={{justifyContent: \"space-between\", paddingBottom: \"0.2rem\"}}>\n        <Box>\n          <Title/>\n          <ToggleTheme/>\n        </Box>\n\n        <Box display={\"flex\"} flexWrap={\"wrap\"} flex={\"0 0 20rem\"} style={{justifyContent: \"space-between\"}}>\n          <Sponsor/>\n          <Stars/>\n          <Info/>\n        </Box>\n      </FullWidthWrappingFlexBox>\n      {info &&\n      Readme\n      }\n    </>}\n\n    {false && <EnableTracking/>}\n  </>;\n};\n\nexport default Header","import React from \"react\";\nimport {Box, useTheme} from \"@material-ui/core\";\nimport {colorOf} from \"../../model/Result\";\nimport * as _ from \"lodash\";\nimport useGlobalState from \"../../state\";\n\nconst HorizontalGlobalResultPercentageLine = () => {\n  const theme = useTheme();\n  const [appliedFilter] = useGlobalState(\"hasAppliedFilter\");\n  const [outcomes] = useGlobalState(\"filteredOutcomes\");\n  const counts = appliedFilter ? _.toPairs(_.countBy(outcomes, it => it.result)) : [];\n\n\n  return <Box height={\"0.5rem\"} display={\"flex\"} overflow={\"hidden\"} width={\"100%\"}>\n    {\n      counts.map(([result, count]) => <React.Fragment key={result}>\n          <Box style={{boxShadow: \"inset \" + theme.palette.background.default + \" 0px -2px 2px 1px\"}} height={\"100%\"} width={count * 100 / outcomes.length + \"%\"} bgcolor={colorOf(result)}/>\n        </React.Fragment>\n      )\n    }\n  </Box>\n};\n\nexport default HorizontalGlobalResultPercentageLine","import React, {useEffect} from 'react';\nimport ExploreData from \"./ExploreData\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport useGlobalState from \"../state\"\nimport ApplyFilter from \"./ApplyFilter\";\nimport LocalStateFromQueryParameters from \"./LocalStateFromQueryParameters\";\nimport TestOutcome from \"../model/TestOutcome\";\nimport FullWidthWrappingFlexBox from \"./molecules/FullWidthWrappingFlexBox\";\nimport Header from \"./Header\";\nimport {Theme, useTheme} from \"@material-ui/core\";\nimport HorizontalGlobalResultPercentageLine from \"./atoms/HorizontalGlobalResultPercentageLine\"\n\n\ndeclare global {\n// noinspection JSUnusedGlobalSymbols\n  interface Window {\n    outcomes: Array<TestOutcome>;\n  }\n}\nconst appStyle = (theme: Theme) => ({\n  background: theme.palette.background.default,\n  borderTop: `0.2rem solid ${theme.palette.grey}`,\n  color: theme.palette.text.primary\n});\n\nconst App = () => {\n    const theme = useTheme();\n    const [parsedQuery] = useGlobalState(\"hasParsedQuery\");\n    const [appliedFilter] = useGlobalState(\"hasAppliedFilter\");\n\n\n  const updateBackground = (color: string) => {\n    document.body.style.setProperty(\"background-color\", color);\n  };\n\n  useEffect(() => {\n    return updateBackground(theme.palette.background.default);\n  }, [theme.palette.background.default]);\n\n\n  const fixEmptyIds = () => {\n      window.outcomes.forEach(it => {\n        if (!it.id || it.id.length === 0) {\n          it.id = it.userStory.id + \": \" + it.name\n        }\n      })\n    };\n    useEffect(fixEmptyIds);\n\n    const InitWithQueryParameters = () => <Router>\n      <Route path=\"*\">\n        <LocalStateFromQueryParameters/>\n      </Route>\n    </Router>;\n\n    return <FullWidthWrappingFlexBox className={\"app\"} style={appStyle(theme)}>\n      {!parsedQuery && <InitWithQueryParameters/>}\n      {parsedQuery && !appliedFilter && <ApplyFilter/>}\n\n      <Header/>\n      <HorizontalGlobalResultPercentageLine/>\n\n      <FullWidthWrappingFlexBox>\n         {parsedQuery && appliedFilter && <>\n              <ApplyFilter/>\n              <ExploreData/>\n            </>}\n      </FullWidthWrappingFlexBox>\n    </FullWidthWrappingFlexBox>\n  }\n;\n\n\nexport default App;\n\n// todo.. put it somewhere\nexport const colorFor = (name: string, opacity: string = \"FF\") => {\n  let hash = 0;\n  for (let i = 0; i < name.length; i++) {\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return \"#\" + ((hash & 0x00FFFFFF) + 0X0F000000).toString(16).slice(-6) + opacity\n    ;\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        // noinspection JSIgnoredPromiseFromCall\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {FunctionComponent} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {ThemeProvider} from \"@material-ui/core\";\nimport useGlobalState from \"./state\";\nimport Themes from \"./themes\";\nimport * as _ from \"lodash\";\n\n//import {Profiler, ProfilerOnRenderCallback} from 'react';\n\n/*\nconst onRender: ProfilerOnRenderCallback = (id, phase, actualDuration, baseDuration, startTime, commitTime, interactions) => {\n  console.log({id, phase, actualDuration, baseDuration, startTime, commitTime, interactions})\n\n};\n*/\n\nconst MyThemeProvider: FunctionComponent = ({children}) => {\n  const [theme] = useGlobalState(\"theme\");\n  return <ThemeProvider theme={_.get(Themes, theme)}>\n    {children}\n  </ThemeProvider>\n\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    {/*<Profiler id=\"Navigation\" onRender={onRender}>*/}\n    <MyThemeProvider>\n      <App/>\n    </MyThemeProvider>\n    {/*</Profiler>*/}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}